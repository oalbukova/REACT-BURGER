{"version":3,"sources":["components/loader/loader.module.css","components/burger-constructor/ingredient/ingredient.module.css","components/modal-overlay/modal-overlay.module.css","components/err/err.module.css","pages/ingredient/ingredient.module.css","pages/order/order.module.css","components/app/app.module.css","components/app-header/app-header.module.css","components/feed-info/feed-info.module.css","services/constants/index.ts","services/reducers/ingredients.ts","services/reducers/selected-items.ts","services/reducers/order.ts","services/reducers/modal.ts","services/reducers/button.ts","services/reducers/tab.ts","services/reducers/password.ts","services/reducers/user.ts","services/reducers/wsReducer.ts","services/reducers/index.ts","services/actions/wsActions.ts","services/middleware/socketMiddleware.ts","services/store.ts","services/hooks.ts","services/actions/modal.ts","utils/constants.ts","utils/utils.ts","services/api.ts","services/actions/ingredients.ts","services/actions/user.ts","services/actions/order.ts","components/app-header/app-header.tsx","components/burger-ingredients/ingredient/ingredient.tsx","components/burger-ingredients/burger-ingredients.tsx","services/actions/tab.ts","components/loader/loader.tsx","components/burger-constructor/ingredient/ingredient.tsx","services/actions/selected-items.ts","components/burger-constructor/burger-constructor.tsx","services/actions/button.ts","components/main/main.tsx","components/modal-overlay/modal-overlay.tsx","components/modal/modal.tsx","components/ingredient-details/ingredient-details.tsx","images/vector1.svg","images/vector2.svg","images/vector3.svg","images/stroke.svg","components/order-details/order-details.tsx","components/err/err.tsx","components/protected-route/protected-route.tsx","components/order/ingredient/ingredient.tsx","components/order/order.tsx","pages/login/login.tsx","pages/register/register.tsx","services/actions/password.ts","pages/forgot-password/forgot-password.tsx","pages/reset-password/reset-password.tsx","components/user-form/user-form.tsx","components/order-feed/feed/feed.tsx","components/order-history/order-history.tsx","pages/profile/profile.tsx","pages/ingredient/ingredient.tsx","pages/err404/err404.tsx","components/order-feed/order-feed.tsx","components/feed-info/feed-info.tsx","pages/feeds/feeds.tsx","pages/order/order.tsx","components/app/app.tsx","reportWebVitals.ts","index.tsx","components/burger-constructor/burger-constructor.module.css","components/ingredient-details/ingredient-details.module.css","components/order-feed/feed/feed.module.css","pages/profile/profile.module.css","components/order-details/order-details.module.css","components/burger-ingredients/burger-ingredients.module.css","components/order/ingredient/ingredient.module.css","components/order/order.module.css","pages/login/login.module.css","pages/register/register.module.css","pages/forgot-password/forgot-password.module.css","pages/reset-password/reset-password.module.css","pages/err404/err404.module.css","components/burger-ingredients/ingredient/ingredient.module.css","components/main/main.module.css","components/modal/modal.module.css","components/user-form/user-form.module.css","components/order-history/order-history.module.css","components/order-feed/order-feed.module.css","pages/feeds/feeds.module.css"],"names":["module","exports","GET_ITEMS_REQUEST","GET_ITEMS_SUCCESS","GET_ITEMS_FAILED","GET_ORDER_REQUEST","GET_ORDER_SUCCESS","GET_ORDER_FAILED","DELETE_CURRENT_ORDER","OPEN_ORDER_MODAL","CLOSE_ORDER_MODAL","OPEN_ERR_MODAL","CLOSE_ERR_MODAL","SET_ERR","ADD_SELECTED_BUN","ADD_SELECTED_TOPPING","DELETE_SELECTED_BUNS","DELETE_SELECTED_TOPPINGS","DELETE_SELECTED_TOPPING","SORT_TOPPING","SET_USER_REQUEST","SET_USER_SUCCESS","SET_USER_FAILED","AUTHORIZE_REQUEST","AUTHORIZE_SUCCESS","AUTHORIZE_FAILED","GET_USER_REQUEST","GET_USER_SUCCESS","GET_USER_FAILED","UPDATE_USER_REQUEST","UPDATE_USER_SUCCESS","UPDATE_USER_FAILED","DELETE_USER_REQUEST","DELETE_USER_SUCCESS","DELETE_USER_FAILED","UPDATE_TOKEN_REQUEST","UPDATE_TOKEN_SUCCESS","UPDATE_TOKEN_FAILED","SET_FORGOT_PASSWORD_REQUEST","SET_FORGOT_PASSWORD_SUCCESS","SET_FORGOT_PASSWORD_FAILED","SET_RESET_PASSWORD_REQUEST","SET_RESET_PASSWORD_SUCCESS","SET_RESET_PASSWORD_FAILED","SET_BTN_DISABLED","SET_BTN_ACTIVE","TAB_SWITCH","WS_CONNECTION_START","WS_CONNECTION_SUCCESS","WS_CONNECTION_ERROR","WS_CONNECTION_CLOSED","WS_GET_ALL_FEEDS","WS_GET_USER_FEEDS","WS_SEND_MESSAGE","initialIngredientsState","items","itemsRequest","itemsFailed","initialSelectedItemsState","selectedBun","selectedToppings","initialOrderState","order","orderRequest","orderFailed","initialModalState","isOrderModalVisible","isErrModalVisible","error","initialButtonState","isBtnDisabled","initialTabState","currentTab","initialPasswordState","forgot_password","forgot_passwordRequest","forgot_passwordFailed","reset_password","reset_passwordRequest","reset_passwordFailed","initialUserState","data","user","token","userRequest","userFailed","isLoggedIn","authRequest","authFailed","currentUserRequest","currentUserFailed","deleteUserRequest","deleteUserFailed","updateTokenRequest","updateTokenFailed","initialState","wsConnected","feeds","orders","total","totalToday","userFeeds","rootReducer","combineReducers","ingredientsReducer","state","action","type","selectedItemsReducer","item","filter","uuid","dragCard","dragIndex","NewToppingsState","splice","hoverIndex","orderReducer","modalReducer","text","buttonReducer","tabReducer","tab","forgotPasswordReducer","resetPasswordReducer","userReducer","wsReducer","payload","wsActions","wsInit","wsSendMessage","onOpen","onClose","onError","onMessage","wsUserActions","socketMiddleware","store","socket","next","dispatch","wsUrl","WebSocket","onopen","event","onerror","onmessage","parsedData","JSON","parse","restParsedData","success","onclose","message","send","stringify","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","createStore","useDispatch","dispatchHook","useSelector","selectorHook","openErrModal","setError","err","API_URL","WS_URL","WS_USER_URL","localStorage","getItem","getCookie","name","matches","document","cookie","match","RegExp","replace","decodeURIComponent","undefined","setCookie","value","cookieProps","props","exp","expires","date","Date","setTime","getTime","toUTCString","encodeURIComponent","updatedCookie","propName","propValue","setTokens","accessToken","split","authToken","refreshToken","setItem","getIngredientsRequest","a","fetch","getOrderRequest","selectedId","method","mode","cache","credentials","headers","Authorization","redirect","referrerPolicy","body","ingredients","forgotPasswordRequest","email","resetPasswordRequest","password","registerRequest","Accept","getUserRequest","authorizeRequest","updateUserRequest","getIngredientsFailedAction","getItems","then","res","ok","json","Promise","reject","status","catch","authorizeFailedAction","deleteUserFailedAction","getUserFailedAction","setUserFailedAction","updateUserFailedAction","updateTokenFailedAction","register","getUser","updateToken","callback","authorize","updateUser","deleteUser","getOrderFailedAction","getOrder","AppHeader","pathname","useLocation","typeForConstructor","typeForUser","pathOnProfile","className","styles","header","container","nav","navLink","to","activeClassName","activeNavLink","exact","logoContainer","profile","Ingredient","ingredient","location","count","useMemo","_id","length","useDrag","collect","monitor","opacity","isDragging","dragRef","style","ref","size","link","background","src","image","alt","price","BurgerIngredients","burgerIngredientsElem","querySelector","bunsElem","saucesElem","toppingElem","bunRef","useRef","saucesRef","toppingRef","setCurrentTab","tabSwitch","setTab","tabRef","current","scrollIntoView","behavior","typeBun","el","typeSauce","typeTopping","burgerIngredients","id","onScroll","bunsPosition","Math","abs","getBoundingClientRect","top","saucesPosition","toppingPosition","onScrollPosition","display","active","onClick","list","map","Loader","loader","color","height","width","visible","index","moveTopping","useCallback","sortTopping","useDrop","accept","handlerId","getHandlerId","hover","hoverBoundingRect","hoverMiddleY","bottom","hoverClientY","getClientOffset","y","drop","drag","isLocked","thumbnail","itemContainer","handleClose","deleteSelectedTopping","BurgerConstructor","history","useHistory","handleDrop","uuidv4","addSelectedBun","addSelectedTopping","isHover","isOver","dropTarget","borderColor","totalPrice","reduce","sum","useEffect","concat","burgerConstructor","text_loader","middleContainer","renderCard","summary","disabled","burgerImg","Main","main","DndProvider","backend","HTML5Backend","ModalOverlay","modalOverlay","modalRoot","getElementById","Modal","children","handleEscClose","e","key","handlerOverlayClick","target","classList","contains","addEventListener","removeEventListener","ReactDOM","createPortal","modal","close","IngredientDetails","ID","useParams","currentIngredient","info","calories","proteins","fat","carbohydrates","OrderDetails","orderDetails","title","number","vector1","vector2","vector3","stroke","Err","ProtectedRoute","rest","render","from","ingredientArr","img_container","img_box","img","Order","moment","createdAt","dateFormatted","gmt","format","slice","fromNow","arrForPrice","buns","notBuns","i","push","Array","Set","filteredArray","arr","some","statusStyle","images","LoginPage","useState","form","setValue","onChange","wrapper","onSubmit","preventDefault","RegisterPage","handleSubmit","placeholder","errorText","setForgotPasswordFailed","setResetPasswordFailed","forgotPassword","resetPassword","ForgotPasswordPage","setEmailValue","ResetPasswordPage","code","UserForm","nameRef","React","emailRef","showButton","setShowButton","iconOnName","setIconOnName","iconOnEmail","setIconOnEmail","focusOnName","setFocusOnName","focusOnEmail","setFocusOnEmail","nameErr","setNameErr","emailErr","setEmailErr","test","changeIconOnFocus","changeIconOnBlur","icon","onFocus","onBlur","onIconClick","setTimeout","focus","buttonContainer","Feed","feed","path","useRouteMatch","filteredArr","imagesArr","counter","OrderHistory","ProfilePage","activeItem","removeItem","exit","description","IngredientPage","NotFound404","content","OrderFeed","FeedInfo","doneArr","createdArr","order_container","done","done_orders","done_number","created","created_orders","created_number","total_container","num_large","Feeds","OrderPage","isProfile","App","handleCloseFeedModal","goBack","app","routeProps","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","StrictMode","basename"],"mappings":"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","file":"static/js/main.0e19d788.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"loader_loader__2lGJw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemContainer\":\"ingredient_itemContainer__22Aka\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalOverlay\":\"modal-overlay_modalOverlay__2DmsG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"err_container__G_leO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ingredient_container__3MqLf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"order_container__2qttu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"app_app__jl1xF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"app-header_header__Vw8Ue\",\"container\":\"app-header_container__3WK9m\",\"logoContainer\":\"app-header_logoContainer__2a6c6\",\"nav\":\"app-header_nav__qxaLC\",\"navLink\":\"app-header_navLink__VapAo\",\"activeNavLink\":\"app-header_activeNavLink__3wZk3\",\"profile\":\"app-header_profile__HrcT9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"feed-info_main__OpoCR\",\"order_container\":\"feed-info_order_container__RzYLL\",\"done\":\"feed-info_done__2lGFh\",\"created\":\"feed-info_created__pE__9\",\"done_orders\":\"feed-info_done_orders__jS7Mh\",\"done_number\":\"feed-info_done_number__3lKpZ\",\"created_orders\":\"feed-info_created_orders__3cvB5\",\"num_large\":\"feed-info_num_large__jgmfT\"};","// ingredients\r\nexport const GET_ITEMS_REQUEST: \"GET_ITEMS_REQUEST\" = \"GET_ITEMS_REQUEST\";\r\nexport const GET_ITEMS_SUCCESS: \"GET_ITEMS_SUCCESS\" = \"GET_ITEMS_SUCCESS\";\r\nexport const GET_ITEMS_FAILED: \"GET_ITEMS_FAILED\" = \"GET_ITEMS_FAILED\";\r\n\r\n// order\r\nexport const GET_ORDER_REQUEST: \"GET_ORDER_REQUEST\" = \"GET_ORDER_REQUEST\";\r\nexport const GET_ORDER_SUCCESS: \"GET_ORDER_SUCCESS\" = \"GET_ORDER_SUCCESS\";\r\nexport const GET_ORDER_FAILED: \"GET_ORDER_FAILED\" = \"GET_ORDER_FAILED\";\r\n\r\nexport const DELETE_CURRENT_ORDER: \"DELETE_CURRENT_ORDER\" = \"DELETE_CURRENT_ORDER\";\r\n\r\n// modal\r\nexport const OPEN_ORDER_MODAL: \"OPEN_ORDER_MODAL\" = \"OPEN_ORDER_MODAL\";\r\nexport const CLOSE_ORDER_MODAL: \"CLOSE_ORDER_MODAL\" = \"CLOSE_ORDER_MODAL\";\r\n\r\nexport const OPEN_ERR_MODAL: \"OPEN_ERR_MODAL\" = \"OPEN_ERR_MODAL\";\r\nexport const CLOSE_ERR_MODAL: \"CLOSE_ERR_MODAL\" = \"CLOSE_ERR_MODAL\";\r\n\r\nexport const SET_ERR: \"SET_ERR\" = \"SET_ERR\";\r\n\r\n// selected-items\r\nexport const ADD_SELECTED_BUN: \"ADD_SELECTED_BUN\" = \"ADD_SELECTED_BUN\";\r\nexport const ADD_SELECTED_TOPPING: \"ADD_SELECTED_TOPPING\" = \"ADD_SELECTED_TOPPING\";\r\n\r\nexport const DELETE_SELECTED_BUNS: \"DELETE_SELECTED_BUNS\" = \"DELETE_SELECTED_BUNS\";\r\nexport const DELETE_SELECTED_TOPPINGS: \"DELETE_SELECTED_TOPPINGS\" = \"DELETE_SELECTED_TOPPINGS\";\r\n\r\nexport const DELETE_SELECTED_TOPPING: \"DELETE_SELECTED_TOPPING\" = \"DELETE_SELECTED_TOPPING\";\r\n\r\nexport const SORT_TOPPING: \"SORT_TOPPING\" = \"SORT_TOPPING\";\r\n\r\n// user\r\nexport const SET_USER_REQUEST: \"SET_USER_REQUEST\" = \"SET_USER_REQUEST\";\r\nexport const SET_USER_SUCCESS: \"SET_USER_SUCCESS\" = \"SET_USER_SUCCESS\";\r\nexport const SET_USER_FAILED: \"SET_USER_FAILED\" = \"SET_USER_FAILED\";\r\n\r\nexport const AUTHORIZE_REQUEST: \"AUTHORIZE_REQUEST\" = \"AUTHORIZE_REQUEST\";\r\nexport const AUTHORIZE_SUCCESS: \"AUTHORIZE_SUCCESS\" = \"AUTHORIZE_SUCCESS\";\r\nexport const AUTHORIZE_FAILED: \"AUTHORIZE_FAILED\" = \"AUTHORIZE_FAILED\";\r\n\r\nexport const GET_USER_REQUEST: \"GET_USER_REQUEST\" = \"GET_USER_REQUEST\";\r\nexport const GET_USER_SUCCESS: \"GET_USER_SUCCESS\" = \"GET_USER_SUCCESS\";\r\nexport const GET_USER_FAILED: \"GET_USER_FAILED\" = \"GET_USER_FAILED\";\r\n\r\nexport const UPDATE_USER_REQUEST: \"UPDATE_USER_REQUEST\" = \"UPDATE_USER_REQUEST\";\r\nexport const UPDATE_USER_SUCCESS: \"UPDATE_USER_SUCCESS\" = \"UPDATE_USER_SUCCESS\";\r\nexport const UPDATE_USER_FAILED: \"UPDATE_USER_FAILED\" = \"UPDATE_USER_FAILED\";\r\n\r\nexport const DELETE_USER_REQUEST: \"DELETE_USER_REQUEST\" = \"DELETE_USER_REQUEST\";\r\nexport const DELETE_USER_SUCCESS: \"DELETE_USER_SUCCESS\" = \"DELETE_USER_SUCCESS\";\r\nexport const DELETE_USER_FAILED: \"DELETE_USER_FAILED\" = \"DELETE_USER_FAILED\";\r\n\r\nexport const UPDATE_TOKEN_REQUEST: \"UPDATE_TOKEN_REQUEST\" = \"UPDATE_TOKEN_REQUEST\";\r\nexport const UPDATE_TOKEN_SUCCESS: \"UPDATE_TOKEN_SUCCESS\" = \"UPDATE_TOKEN_SUCCESS\";\r\nexport const UPDATE_TOKEN_FAILED: \"UPDATE_TOKEN_FAILED\" = \"UPDATE_TOKEN_FAILED\";\r\n\r\n// password\r\nexport const SET_FORGOT_PASSWORD_REQUEST: \"SET_FORGOT_PASSWORD_REQUEST\" = \"SET_FORGOT_PASSWORD_REQUEST\";\r\nexport const SET_FORGOT_PASSWORD_SUCCESS: \"SET_FORGOT_PASSWORD_SUCCESS\" = \"SET_FORGOT_PASSWORD_SUCCESS\";\r\nexport const SET_FORGOT_PASSWORD_FAILED: \"SET_FORGOT_PASSWORD_FAILED\" = \"SET_FORGOT_PASSWORD_FAILED\";\r\n\r\nexport const SET_RESET_PASSWORD_REQUEST: \"SET_RESET_PASSWORD_REQUEST\" = \"SET_RESET_PASSWORD_REQUEST\";\r\nexport const SET_RESET_PASSWORD_SUCCESS: \"SET_RESET_PASSWORD_SUCCESS\" = \"SET_RESET_PASSWORD_SUCCESS\";\r\nexport const SET_RESET_PASSWORD_FAILED: \"SET_RESET_PASSWORD_FAILED\" = \"SET_RESET_PASSWORD_FAILED\";\r\n\r\n// button\r\nexport const SET_BTN_DISABLED: \"SET_BTN_DISABLED\" = \"SET_BTN_DISABLED\";\r\nexport const SET_BTN_ACTIVE: \"SET_BTN_ACTIVE\" = \"SET_BTN_ACTIVE\";\r\n\r\n// tab\r\nexport const TAB_SWITCH: \"TAB_SWITCH\" = \"TAB_SWITCH\";\r\n\r\n// ws\r\nexport const WS_CONNECTION_START: \"WS_CONNECTION_START\" = \"WS_CONNECTION_START\";\r\nexport const WS_CONNECTION_SUCCESS: \"WS_CONNECTION_SUCCESS\" = \"WS_CONNECTION_SUCCESS\";\r\nexport const WS_CONNECTION_ERROR: \"WS_CONNECTION_ERROR\" = \"WS_CONNECTION_ERROR\";\r\nexport const WS_CONNECTION_CLOSED: \"WS_CONNECTION_CLOSED\" = \"WS_CONNECTION_CLOSED\";\r\nexport const WS_GET_ALL_FEEDS: \"WS_GET_ALL_FEEDS\" = \"WS_GET_ALL_FEEDS\";\r\nexport const WS_GET_USER_FEEDS: \"WS_GET_USER_FEEDS\" = \"WS_GET_USER_FEEDS\";\r\nexport const WS_SEND_MESSAGE: \"WS_SEND_MESSAGE\" = \"WS_SEND_MESSAGE\";\r\n\r\n","// constants\r\nimport { GET_ITEMS_FAILED, GET_ITEMS_REQUEST, GET_ITEMS_SUCCESS } from \"../constants\";\r\n\r\n// actions\r\nimport { TIngredientsActions } from \"../actions/ingredients\";\r\n\r\n// utils\r\nimport { TIngredient } from \"../../utils/type\";\r\n\r\n\r\ntype TIngredientState = {\r\n  items: ReadonlyArray<TIngredient>,\r\n  itemsRequest: boolean,\r\n  itemsFailed: boolean,\r\n}\r\n\r\nconst initialIngredientsState: TIngredientState = {\r\n  items: [], itemsRequest: false, itemsFailed: false\r\n};\r\n\r\nexport const ingredientsReducer = (state = initialIngredientsState, action: TIngredientsActions) => {\r\n\r\n  switch (action.type) {\r\n    case GET_ITEMS_REQUEST: {\r\n      return {\r\n        ...state, itemsRequest: true\r\n      };\r\n    }\r\n    case GET_ITEMS_SUCCESS: {\r\n      return {\r\n        ...state, itemsFailed: false, items: action.items, itemsRequest: false\r\n      };\r\n    }\r\n    case GET_ITEMS_FAILED: {\r\n      return { ...state, itemsFailed: true, itemsRequest: false };\r\n    }\r\n\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n","// constants\r\nimport {\r\n  ADD_SELECTED_BUN,\r\n  ADD_SELECTED_TOPPING,\r\n  DELETE_SELECTED_BUNS,\r\n  DELETE_SELECTED_TOPPING,\r\n  DELETE_SELECTED_TOPPINGS,\r\n  SORT_TOPPING,\r\n} from \"../constants\";\r\n\r\n// actions\r\nimport { TSelectedItemsActions } from \"../actions/selected-items\";\r\n\r\n// utils\r\nimport { TIngredient } from \"../../utils/type\";\r\n\r\n\r\ntype TSelectedItemsState = {\r\n  selectedBun: ReadonlyArray<TIngredient>,\r\n  selectedToppings: ReadonlyArray<TIngredient>,\r\n}\r\n\r\nconst initialSelectedItemsState: TSelectedItemsState = {\r\n  selectedBun: [],\r\n  selectedToppings: [],\r\n};\r\n\r\nexport const selectedItemsReducer = (\r\n  state = initialSelectedItemsState,\r\n  action: TSelectedItemsActions\r\n) => {\r\n  switch (action.type) {\r\n    case ADD_SELECTED_BUN: {\r\n      return {\r\n        ...state,\r\n        selectedBun: [{ ...action.item }],\r\n      };\r\n    }\r\n    case ADD_SELECTED_TOPPING: {\r\n      return {\r\n        ...state,\r\n        selectedToppings: [...state.selectedToppings, { ...action.item }],\r\n      };\r\n    }\r\n\r\n    case DELETE_SELECTED_BUNS: {\r\n      return {\r\n        ...state,\r\n        selectedBun: [],\r\n      };\r\n    }\r\n    case DELETE_SELECTED_TOPPINGS: {\r\n      return {\r\n        ...state,\r\n        selectedToppings: [],\r\n      };\r\n    }\r\n\r\n    case DELETE_SELECTED_TOPPING: {\r\n      return {\r\n        ...state,\r\n        selectedToppings: [...state.selectedToppings].filter(\r\n          (item) => item.uuid !== action.item.uuid\r\n        ),\r\n      };\r\n    }\r\n\r\n    case SORT_TOPPING: {\r\n      const dragCard = state.selectedToppings[action.dragIndex];\r\n      const NewToppingsState = [...state.selectedToppings];\r\n      NewToppingsState.splice(action.dragIndex, 1);\r\n      NewToppingsState.splice(action.hoverIndex, 0, dragCard);\r\n      return {\r\n        ...state,\r\n        selectedToppings: NewToppingsState,\r\n      };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n","// constants\r\nimport { DELETE_CURRENT_ORDER, GET_ORDER_FAILED, GET_ORDER_REQUEST, GET_ORDER_SUCCESS, } from \"../constants\";\r\n\r\n// actions\r\nimport { TOrderActions } from \"../actions/order\";\r\n\r\n// utils\r\nimport { TOrder } from \"../../utils/type\";\r\n\r\n\r\ntype TOrderState = {\r\n  orderRequest: boolean,\r\n  orderFailed: boolean,\r\n  order: TOrder,\r\n}\r\n\r\nconst initialOrderState: TOrderState = {\r\n  order: {},\r\n  orderRequest: false,\r\n  orderFailed: false,\r\n};\r\n\r\nexport const orderReducer = (state = initialOrderState, action: TOrderActions) => {\r\n  switch (action.type) {\r\n    case GET_ORDER_REQUEST: {\r\n      return {\r\n        ...state,\r\n        orderRequest: true,\r\n      };\r\n    }\r\n    case GET_ORDER_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        orderFailed: false,\r\n        order: action.order,\r\n        orderRequest: false,\r\n      };\r\n    }\r\n    case GET_ORDER_FAILED: {\r\n      return { ...state, orderFailed: true, orderRequest: false };\r\n    }\r\n\r\n    case DELETE_CURRENT_ORDER: {\r\n      return { ...state, order: {} };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n","// constants\r\nimport { CLOSE_ERR_MODAL, CLOSE_ORDER_MODAL, OPEN_ERR_MODAL, OPEN_ORDER_MODAL, SET_ERR } from \"../constants\";\r\n\r\n// actions\r\nimport { TModalActions } from \"../actions/modal\";\r\n\r\n\r\ntype TModalState = {\r\n  isOrderModalVisible: boolean,\r\n  isErrModalVisible: boolean,\r\n  error: string,\r\n}\r\n\r\nconst initialModalState: TModalState = {\r\n  isOrderModalVisible: false,\r\n  isErrModalVisible: false,\r\n  error: \"\",\r\n};\r\n\r\nexport const modalReducer = (state = initialModalState, action: TModalActions) => {\r\n  switch (action.type) {\r\n    case OPEN_ORDER_MODAL: {\r\n      return {\r\n        ...state,\r\n        isOrderModalVisible: true,\r\n      };\r\n    }\r\n    case CLOSE_ORDER_MODAL: {\r\n      return {\r\n        ...state,\r\n        isOrderModalVisible: false,\r\n      };\r\n    }\r\n\r\n    case OPEN_ERR_MODAL: {\r\n      return {\r\n        ...state,\r\n        isErrModalVisible: true,\r\n      };\r\n    }\r\n    case CLOSE_ERR_MODAL: {\r\n      return {\r\n        ...state,\r\n        isErrModalVisible: false,\r\n      };\r\n    }\r\n\r\n    case SET_ERR: {\r\n      return {\r\n        ...state,\r\n        error: action.text,\r\n      };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n","// constants\r\nimport { SET_BTN_DISABLED, SET_BTN_ACTIVE } from \"../constants\";\r\n\r\n// actions\r\nimport { TButtonActions } from \"../actions/button\";\r\n\r\n\r\ntype TButtonState = {\r\n  isBtnDisabled: boolean;\r\n}\r\n\r\nconst initialButtonState: TButtonState = {\r\n  isBtnDisabled: false,\r\n};\r\n\r\nexport const buttonReducer = (state = initialButtonState, action: TButtonActions) => {\r\n  switch (action.type) {\r\n    case SET_BTN_DISABLED: {\r\n      return {\r\n        ...state,\r\n        isBtnDisabled: true,\r\n      };\r\n    }\r\n    case SET_BTN_ACTIVE: {\r\n      return {\r\n        ...state,\r\n        isBtnDisabled: false,\r\n      };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n","// constants\r\nimport { TAB_SWITCH } from \"../constants\";\r\n\r\n// actions\r\nimport { TTabActions } from \"../actions/tab\";\r\n\r\n\r\ntype TTabState = {\r\n  currentTab: string;\r\n}\r\n\r\nconst initialTabState: TTabState = {\r\n  currentTab: \"bun\",\r\n};\r\n\r\nexport const tabReducer = (state = initialTabState, action: TTabActions) => {\r\n  switch (action.type) {\r\n    case TAB_SWITCH: {\r\n      return {\r\n        ...state,\r\n        currentTab: action.tab,\r\n      };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n","// constants\r\nimport {\r\n  SET_FORGOT_PASSWORD_FAILED,\r\n  SET_FORGOT_PASSWORD_REQUEST,\r\n  SET_FORGOT_PASSWORD_SUCCESS,\r\n  SET_RESET_PASSWORD_FAILED,\r\n  SET_RESET_PASSWORD_REQUEST,\r\n  SET_RESET_PASSWORD_SUCCESS,\r\n} from \"../constants\";\r\n\r\n// actions\r\nimport { TPasswordActions } from \"../actions/password\";\r\n\r\n// utils\r\nimport { TRequestMessage } from \"../../utils/type\";\r\n\r\n\r\ntype TPasswordState = {\r\n  forgot_password: TRequestMessage,\r\n  forgot_passwordRequest: boolean,\r\n  forgot_passwordFailed: boolean,\r\n  reset_password: TRequestMessage,\r\n  reset_passwordRequest: boolean,\r\n  reset_passwordFailed: boolean,\r\n}\r\n\r\nconst initialPasswordState: TPasswordState = {\r\n  forgot_password: {},\r\n  forgot_passwordRequest: false,\r\n  forgot_passwordFailed: false,\r\n  reset_password: {},\r\n  reset_passwordRequest: false,\r\n  reset_passwordFailed: false,\r\n};\r\n\r\nexport const forgotPasswordReducer = (\r\n  state = initialPasswordState,\r\n  action: TPasswordActions\r\n) => {\r\n  switch (action.type) {\r\n    case SET_FORGOT_PASSWORD_REQUEST: {\r\n      return {\r\n        ...state,\r\n        forgot_passwordRequest: true,\r\n      };\r\n    }\r\n    case SET_FORGOT_PASSWORD_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        forgot_passwordFailed: false,\r\n        forgot_password: action.forgot_password,\r\n        forgot_passwordRequest: false,\r\n      };\r\n    }\r\n    case SET_FORGOT_PASSWORD_FAILED: {\r\n      return {\r\n        ...state,\r\n        forgot_passwordFailed: true,\r\n        forgot_passwordRequest: false,\r\n      };\r\n    }\r\n\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport const resetPasswordReducer = (\r\n  state = initialPasswordState,\r\n  action: TPasswordActions\r\n) => {\r\n  switch (action.type) {\r\n    case SET_RESET_PASSWORD_REQUEST: {\r\n      return {\r\n        ...state,\r\n        reset_passwordRequest: true,\r\n      };\r\n    }\r\n    case SET_RESET_PASSWORD_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        reset_passwordFailed: false,\r\n        reset_password: action.reset_password,\r\n        reset_passwordRequest: false,\r\n      };\r\n    }\r\n    case SET_RESET_PASSWORD_FAILED: {\r\n      return {\r\n        ...state,\r\n        reset_passwordFailed: true,\r\n        reset_passwordRequest: false,\r\n      };\r\n    }\r\n\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n","// constants\r\nimport {\r\n  AUTHORIZE_FAILED,\r\n  AUTHORIZE_REQUEST,\r\n  AUTHORIZE_SUCCESS,\r\n  DELETE_USER_FAILED,\r\n  DELETE_USER_REQUEST,\r\n  DELETE_USER_SUCCESS,\r\n  GET_USER_FAILED,\r\n  GET_USER_REQUEST,\r\n  GET_USER_SUCCESS,\r\n  SET_USER_FAILED,\r\n  SET_USER_REQUEST,\r\n  SET_USER_SUCCESS,\r\n  UPDATE_TOKEN_FAILED,\r\n  UPDATE_TOKEN_REQUEST,\r\n  UPDATE_TOKEN_SUCCESS,\r\n  UPDATE_USER_FAILED,\r\n  UPDATE_USER_REQUEST,\r\n  UPDATE_USER_SUCCESS,\r\n} from \"../constants\";\r\n\r\n// actions\r\nimport { TUserActions } from \"../actions/user\";\r\n\r\n// utils\r\nimport { TData, TToken, TUserData } from \"../../utils/type\";\r\n\r\n\r\ntype TUserState = {\r\n  data: TData,\r\n  user: TUserData,\r\n  token: TToken,\r\n\r\n  userRequest: boolean,\r\n  userFailed: boolean,\r\n  isLoggedIn: boolean,\r\n\r\n  authRequest: boolean,\r\n  authFailed: boolean,\r\n\r\n  currentUserRequest: boolean,\r\n  currentUserFailed: boolean,\r\n\r\n  deleteUserRequest: boolean,\r\n  deleteUserFailed: boolean,\r\n\r\n  updateTokenRequest: boolean,\r\n  updateTokenFailed: boolean,\r\n}\r\nconst initialUserState: TUserState = {\r\n  data: {},\r\n  user: {},\r\n  token: {},\r\n\r\n  userRequest: false,\r\n  userFailed: false,\r\n  isLoggedIn: false,\r\n\r\n  authRequest: false,\r\n  authFailed: false,\r\n\r\n  currentUserRequest: false,\r\n  currentUserFailed: false,\r\n\r\n  deleteUserRequest: false,\r\n  deleteUserFailed: false,\r\n\r\n  updateTokenRequest: false,\r\n  updateTokenFailed: false,\r\n};\r\n\r\nexport const userReducer = (state = initialUserState, action: TUserActions) => {\r\n  switch (action.type) {\r\n    case SET_USER_REQUEST: {\r\n      return {\r\n        ...state,\r\n        userRequest: true,\r\n      };\r\n    }\r\n    case SET_USER_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        userFailed: false,\r\n        data: action.user,\r\n        userRequest: false,\r\n      };\r\n    }\r\n    case SET_USER_FAILED: {\r\n      return { ...state, userFailed: true, userRequest: false };\r\n    }\r\n\r\n    case AUTHORIZE_REQUEST: {\r\n      return {\r\n        ...state,\r\n        authRequest: true,\r\n      };\r\n    }\r\n    case AUTHORIZE_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        authFailed: false,\r\n        data: action.user,\r\n        authRequest: false,\r\n      };\r\n    }\r\n    case AUTHORIZE_FAILED: {\r\n      return { ...state, authFailed: true, authRequest: false };\r\n    }\r\n\r\n    case GET_USER_REQUEST: {\r\n      return {\r\n        ...state,\r\n        currentUserRequest: true,\r\n      };\r\n    }\r\n    case GET_USER_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        currentUserFailed: false,\r\n        user: action.user,\r\n        currentUserRequest: false,\r\n      };\r\n    }\r\n    case GET_USER_FAILED: {\r\n      return { ...state, currentUserFailed: true, currentUserRequest: false };\r\n    }\r\n\r\n    case UPDATE_USER_REQUEST: {\r\n      return {\r\n        ...state,\r\n        currentUserRequest: true,\r\n      };\r\n    }\r\n\r\n\r\n    case UPDATE_USER_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        currentUserFailed: false,\r\n        user: action.user,\r\n        currentUserRequest: false,\r\n      };\r\n    }\r\n    case UPDATE_USER_FAILED: {\r\n      return { ...state, currentUserFailed: true, currentUserRequest: false };\r\n    }\r\n\r\n    case DELETE_USER_REQUEST: {\r\n      return {\r\n        ...state,\r\n        deleteUserRequest: true,\r\n      };\r\n    }\r\n    case DELETE_USER_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        deleteUserFailed: false,\r\n        user: {},\r\n        deleteUserRequest: false,\r\n      };\r\n    }\r\n    case DELETE_USER_FAILED: {\r\n      return { ...state, deleteUserFailed: true, deleteUserRequest: false };\r\n    }\r\n\r\n    case UPDATE_TOKEN_REQUEST: {\r\n      return {\r\n        ...state,\r\n        updateTokenRequest: true,\r\n      };\r\n    }\r\n    case UPDATE_TOKEN_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        updateTokenFailed: false,\r\n        token: action.token,\r\n        updateTokenRequest: false,\r\n      };\r\n    }\r\n    case UPDATE_TOKEN_FAILED: {\r\n      return { ...state, updateTokenFailed: true, updateTokenRequest: false };\r\n    }\r\n\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n","// constants\r\nimport {\r\n  WS_CONNECTION_CLOSED,\r\n  WS_CONNECTION_ERROR,\r\n  WS_CONNECTION_SUCCESS,\r\n  WS_GET_ALL_FEEDS, WS_GET_USER_FEEDS,\r\n} from '../constants';\r\n\r\n// utils\r\nimport { TErr, TOrderFeeds } from \"../../utils/type\";\r\n\r\n// actions\r\nimport { TWSActions } from \"../actions/wsActions\";\r\n\r\n\r\nexport type TWSState = {\r\n  wsConnected: boolean;\r\n  feeds: TOrderFeeds;\r\n  userFeeds: TOrderFeeds;\r\n  error?: TErr | null;\r\n}\r\n\r\nexport const initialState: TWSState = {\r\n  wsConnected: false,\r\n  feeds: {\r\n    orders: [],\r\n    total: 0,\r\n    totalToday: 0\r\n  },\r\n  userFeeds: {\r\n    orders: [],\r\n    total: 0,\r\n    totalToday: 0\r\n  },\r\n  error: null,\r\n};\r\n\r\nexport const wsReducer = (state = initialState, action: TWSActions) => {\r\n  switch (action.type) {\r\n\r\n    case WS_CONNECTION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        wsConnected: true\r\n      };\r\n\r\n    case WS_CONNECTION_ERROR:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        wsConnected: false\r\n      };\r\n\r\n    case WS_CONNECTION_CLOSED:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        wsConnected: false\r\n      };\r\n\r\n    case WS_GET_ALL_FEEDS:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        feeds: action.payload,\r\n      };\r\n    case WS_GET_USER_FEEDS:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        userFeeds: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","// redux\r\nimport { combineReducers } from \"redux\";\r\n\r\n// reducers\r\nimport { ingredientsReducer } from \"./ingredients\";\r\nimport { selectedItemsReducer } from \"./selected-items\";\r\nimport { orderReducer } from \"./order\";\r\nimport { modalReducer } from \"./modal\";\r\nimport { buttonReducer } from \"./button\";\r\nimport { tabReducer } from \"./tab\";\r\nimport { forgotPasswordReducer, resetPasswordReducer } from \"./password\";\r\nimport { userReducer } from \"./user\";\r\nimport { wsReducer } from \"./wsReducer\";\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n  ingredientsReducer,\r\n  selectedItemsReducer,\r\n  orderReducer,\r\n  modalReducer,\r\n  buttonReducer,\r\n  tabReducer,\r\n  forgotPasswordReducer,\r\n  resetPasswordReducer,\r\n  userReducer,\r\n  wsReducer\r\n});\r\n","// redux\r\nimport { PayloadAction } from \"@reduxjs/toolkit\";\r\n\r\n// utils\r\nimport { TErr, TOrderFeeds } from \"../../utils/type\";\r\n\r\n// constants\r\nimport {\r\n  WS_CONNECTION_START,\r\n  WS_CONNECTION_SUCCESS,\r\n  WS_CONNECTION_ERROR,\r\n  WS_CONNECTION_CLOSED,\r\n  WS_SEND_MESSAGE,\r\n  WS_GET_ALL_FEEDS,\r\n  WS_GET_USER_FEEDS,\r\n} from '../constants';\r\n\r\n\r\nexport const wsActions = {\r\n  wsInit: WS_CONNECTION_START,\r\n  wsSendMessage: WS_SEND_MESSAGE,\r\n  onOpen: WS_CONNECTION_SUCCESS,\r\n  onClose: WS_CONNECTION_CLOSED,\r\n  onError: WS_CONNECTION_ERROR,\r\n  onMessage: WS_GET_ALL_FEEDS\r\n};\r\n\r\nexport const wsUserActions = {\r\n  wsInit: WS_CONNECTION_START,\r\n  wsSendMessage: WS_SEND_MESSAGE,\r\n  onOpen: WS_CONNECTION_SUCCESS,\r\n  onClose: WS_CONNECTION_CLOSED,\r\n  onError: WS_CONNECTION_ERROR,\r\n  onMessage: WS_GET_USER_FEEDS\r\n};\r\n\r\nexport interface IConnectionStartAction {\r\n  readonly type: typeof WS_CONNECTION_START;\r\n}\r\n\r\nexport interface IConnectionSuccessAction {\r\n  readonly type: typeof WS_CONNECTION_SUCCESS;\r\n}\r\n\r\nexport interface IConnectionErrorAction {\r\n  readonly type: typeof WS_CONNECTION_ERROR;\r\n  readonly payload: TErr | null;\r\n}\r\n\r\nexport interface IConnectionClosedAction {\r\n  readonly type: typeof WS_CONNECTION_CLOSED;\r\n}\r\n\r\nexport interface ISendMessagedAction {\r\n  readonly type: typeof WS_SEND_MESSAGE;\r\n  readonly payload: PayloadAction;\r\n}\r\n\r\nexport interface IGetAllFeedsAction {\r\n  readonly type: typeof WS_GET_ALL_FEEDS;\r\n  readonly payload: TOrderFeeds;\r\n}\r\n\r\nexport interface IGetUserFeedsAction {\r\n  readonly type: typeof WS_GET_USER_FEEDS;\r\n  readonly payload: TOrderFeeds;\r\n}\r\n\r\nexport type TWSActions =\r\n  IConnectionSuccessAction | IConnectionErrorAction | IConnectionClosedAction | ISendMessagedAction | IGetAllFeedsAction | IGetUserFeedsAction;\r\n\r\nexport const wsConnectionStart = (): IConnectionStartAction => {\r\n  return {\r\n    type: WS_CONNECTION_START\r\n  };\r\n};\r\n\r\nexport const wsConnectionSuccess = (): IConnectionSuccessAction => {\r\n  return {\r\n    type: WS_CONNECTION_SUCCESS\r\n  };\r\n};\r\n\r\nexport const wsConnectionError = (error: PayloadAction): IConnectionErrorAction => {\r\n  return {\r\n    type: WS_CONNECTION_ERROR,\r\n    payload: error\r\n  };\r\n};\r\n\r\n\r\nexport const wsConnectionClosed = (): IConnectionClosedAction => {\r\n  return {\r\n    type: WS_CONNECTION_CLOSED\r\n  };\r\n};\r\n\r\nexport const wsSendMessage = (message: { payload: void, type: string }): ISendMessagedAction => {\r\n  return {\r\n    type: WS_SEND_MESSAGE,\r\n    payload: message\r\n  };\r\n};\r\n\r\nexport const wsGetALLFeeds = (feeds: TOrderFeeds): IGetAllFeedsAction => {\r\n  return {\r\n    type: WS_GET_ALL_FEEDS, payload: feeds\r\n  };\r\n};\r\n\r\nexport const wsGetUserFeeds = (userFeeds: TOrderFeeds): IGetUserFeedsAction => {\r\n  return {\r\n    type: WS_GET_USER_FEEDS,\r\n    payload: userFeeds\r\n  };\r\n};\r\n","// redux\r\nimport type { Middleware, MiddlewareAPI } from 'redux';\r\n\r\n// utils\r\nimport type { RootState, AppDispatch } from '../../utils/type';\r\nimport { TwsActions } from \"../../utils/type\";\r\n\r\n\r\nexport const socketMiddleware = (wsActions: TwsActions): Middleware => {\r\n  return ((store: MiddlewareAPI<AppDispatch, RootState>) => {\r\n    let socket: WebSocket | null = null;\r\n\r\n    return next => (action) => {\r\n      const { dispatch } = store;\r\n      const { type, payload, wsUrl, token } = action;\r\n      const { wsInit, wsSendMessage, onOpen, onClose, onError, onMessage } = wsActions;\r\n\r\n      if (type === wsInit) {\r\n        socket = token\r\n          ? new WebSocket(`${wsUrl}?token=${token}`)\r\n          : new WebSocket(`${wsUrl}`);\r\n      }\r\n      if (socket) {\r\n        socket.onopen = event => {\r\n          dispatch({ type: onOpen, payload: event });\r\n        };\r\n\r\n        socket.onerror = event => {\r\n          dispatch({ type: onError, payload: event });\r\n        };\r\n\r\n        socket.onmessage = event => {\r\n          const { data } = event;\r\n          const parsedData = JSON.parse(data);\r\n          const { success, ...restParsedData } = parsedData;\r\n          dispatch({ type: onMessage, payload: restParsedData });\r\n        };\r\n\r\n        socket.onclose = event => {\r\n          dispatch({ type: onClose, payload: event });\r\n        };\r\n\r\n        if (type === wsSendMessage) {\r\n          const message = token ? { ...payload, token } : { ...payload };\r\n          socket.send(JSON.stringify(message));\r\n        }\r\n      }\r\n\r\n      next(action);\r\n    };\r\n  }) as Middleware;\r\n};\r\n","// redux\r\nimport { compose, createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\n// reducers\r\nimport { rootReducer } from \"./reducers\";\r\n\r\n// actions\r\nimport { wsActions, wsUserActions } from \"./actions/wsActions\";\r\n\r\n// middleware\r\nimport { socketMiddleware } from './middleware'\r\n\r\n\r\ndeclare global {\r\n  interface Window {\r\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\r\n  }\r\n}\r\n\r\nexport const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst enhancer = composeEnhancers(applyMiddleware(thunk, socketMiddleware(wsActions), socketMiddleware(wsUserActions)));\r\n\r\nexport const store = createStore(rootReducer, enhancer);\r\n\r\n","// redux\r\nimport {\r\n  TypedUseSelectorHook,\r\n  useDispatch as dispatchHook,\r\n  useSelector as selectorHook\r\n} from 'react-redux';\r\n\r\n// utils\r\nimport { AppThunk, AppDispatch, RootState } from '../utils/type';\r\n\r\nexport const useDispatch = () => dispatchHook<AppDispatch | AppThunk>();\r\nexport const useSelector: TypedUseSelectorHook<RootState> = selectorHook;\r\n","// constants\r\nimport {\r\n  OPEN_ORDER_MODAL,\r\n  CLOSE_ORDER_MODAL,\r\n  OPEN_ERR_MODAL,\r\n  CLOSE_ERR_MODAL,\r\n  SET_ERR\r\n} from \"../constants\";\r\n\r\n\r\nexport interface IOpenOrderModalAction {\r\n  readonly type: typeof OPEN_ORDER_MODAL;\r\n}\r\n\r\nexport interface ICloseOrderModalAction {\r\n  readonly type: typeof CLOSE_ORDER_MODAL;\r\n}\r\n\r\nexport interface IOpenErrModalAction {\r\n  readonly type: typeof OPEN_ERR_MODAL;\r\n}\r\n\r\nexport interface ICloseErrModalAction {\r\n  readonly type: typeof CLOSE_ERR_MODAL;\r\n}\r\n\r\nexport interface ISetErrAction {\r\n  readonly type: typeof SET_ERR;\r\n  readonly text: string;\r\n}\r\n\r\nexport type TModalActions =\r\n  IOpenOrderModalAction |\r\n  ICloseOrderModalAction |\r\n  IOpenErrModalAction |\r\n  ICloseErrModalAction |\r\n  ISetErrAction;\r\n\r\nexport const openOrderModal = (): IOpenOrderModalAction => ({\r\n  type: OPEN_ORDER_MODAL,\r\n});\r\n\r\nexport const closeOrderModal = (): ICloseOrderModalAction => ({\r\n  type: CLOSE_ORDER_MODAL,\r\n});\r\n\r\nexport const openErrModal = (): IOpenErrModalAction => ({\r\n  type: OPEN_ERR_MODAL,\r\n});\r\n\r\nexport const closeErrModal = (): ICloseErrModalAction => ({\r\n  type: CLOSE_ERR_MODAL,\r\n});\r\n\r\nexport const setError = (err: string): ISetErrAction => ({\r\n  type: SET_ERR,\r\n  text: err,\r\n});\r\n","export const API_URL: string = \"https://norma.nomoreparties.space/api/\";\r\n\r\nexport const WS_URL: string = \"wss://norma.nomoreparties.space/orders/all\";\r\n\r\nexport const WS_USER_URL: string = \"wss://norma.nomoreparties.space/orders\";\r\n\r\n\r\nexport const MILLISECONDS: number = 1000;\r\n\r\nexport const token: string | null = localStorage.getItem(\"refreshToken\");\r\n\r\n","// utils\r\nimport { MILLISECONDS } from \"./constants\";\r\nimport { TCookieProps, TData } from \"./type\";\r\n\r\n\r\nexport function getCookie(name: string): string | undefined {\r\n  const matches = document.cookie.match(\r\n    new RegExp(\r\n      \"(?:^|; )\" + name.replace(/([$?*|{}\\]\\\\^])/g, \"\\\\$1\") + \"=([^;]*)\"\r\n    )\r\n  );\r\n  return matches ? decodeURIComponent(matches[1]) : undefined;\r\n}\r\n\r\nexport function setCookie(\r\n  name: string,\r\n  value: string | null,\r\n  cookieProps: TCookieProps\r\n): void {\r\n  const props = { ...cookieProps };\r\n  let exp = props.expires;\r\n  if (typeof exp == \"number\" && exp) {\r\n    const date = new Date();\r\n    date.setTime(date.getTime() + exp * MILLISECONDS);\r\n    exp = props.expires = date;\r\n  }\r\n  if (exp && exp instanceof Date) {\r\n    props.expires = exp.toUTCString();\r\n  }\r\n  if (value) {\r\n    value = encodeURIComponent(value);\r\n  }\r\n\r\n  let updatedCookie = name + \"=\" + value;\r\n  for (const propName in props) {\r\n    updatedCookie += \"; \" + propName;\r\n    const propValue = props[propName];\r\n    if (propValue !== true) {\r\n      updatedCookie += \"=\" + propValue;\r\n    }\r\n  }\r\n  document.cookie = updatedCookie;\r\n}\r\n\r\nexport function deleteCookie(name: string): void {\r\n  setCookie(name, null, { expires: -1 });\r\n}\r\n\r\nexport function setTokens(data: TData): void {\r\n  const accessToken: string | undefined = data.accessToken?.split(\"Bearer \")[1];\r\n  const authToken: string | undefined = data.refreshToken;\r\n  accessToken && setCookie(\"token\", accessToken, { \"max-age\": 1200 });\r\n  authToken && localStorage.setItem(\"refreshToken\", authToken);\r\n}\r\n","import { API_URL } from \"../utils/constants\";\r\nimport { getCookie } from \"../utils/utils\";\r\n\r\n\r\nexport const getIngredientsRequest = async (): Promise<Response> =>\r\n  await fetch(`${API_URL}ingredients`)\r\n\r\nexport const getOrderRequest = async (selectedId: ReadonlyArray<string>) =>\r\n  await fetch(`${API_URL}orders`, {\r\n    method: \"POST\",\r\n\r\n    mode: \"cors\",\r\n    cache: \"no-cache\",\r\n    credentials: \"same-origin\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"Bearer \" + getCookie(\"token\"),\r\n    },\r\n    redirect: \"follow\",\r\n    referrerPolicy: \"no-referrer\",\r\n    body: JSON.stringify({\r\n      ingredients: selectedId,\r\n    }),\r\n  })\r\n\r\nexport const forgotPasswordRequest = async (email: string): Promise<Response> =>\r\n  await fetch(`${API_URL}password-reset`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({ email }),\r\n  })\r\n\r\nexport const resetPasswordRequest = async (password: string, token: string): Promise<Response> =>\r\n  await fetch(`${API_URL}password-reset/reset`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({ password, token }),\r\n  })\r\n\r\nexport const registerRequest = async (email: string, password: string, name: string): Promise<Response> =>\r\n  await fetch(`${API_URL}auth/register`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({ email, password, name }),\r\n  })\r\n\r\nexport const updateTokenRequest = async (): Promise<Response> =>\r\n  await fetch(`${API_URL}auth/token`, {\r\n    method: \"POST\",\r\n    mode: \"cors\",\r\n    cache: \"no-cache\",\r\n    credentials: \"same-origin\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    redirect: \"follow\",\r\n    referrerPolicy: \"no-referrer\",\r\n    body: JSON.stringify({\r\n      token: `${localStorage.getItem(\"refreshToken\")}`,\r\n    }),\r\n  })\r\n\r\nexport const getUserRequest = async (): Promise<Response> =>\r\n  await fetch(`${API_URL}auth/user`, {\r\n    method: \"GET\",\r\n    mode: \"cors\",\r\n    cache: \"no-cache\",\r\n    credentials: \"same-origin\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"Bearer \" + getCookie(\"token\"),\r\n    },\r\n    redirect: \"follow\",\r\n    referrerPolicy: \"no-referrer\",\r\n  })\r\n\r\nexport const authorizeRequest = async (email: string, password: string): Promise<Response> =>\r\n  await fetch(`${API_URL}auth/login`, {\r\n    method: \"POST\",\r\n    mode: \"cors\",\r\n    cache: \"no-cache\",\r\n    credentials: \"same-origin\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    redirect: \"follow\",\r\n    referrerPolicy: \"no-referrer\",\r\n    body: JSON.stringify({ email, password }),\r\n  })\r\n\r\nexport const updateUserRequest = async (email: string, password: string, name: string): Promise<Response> =>\r\n  await fetch(`${API_URL}auth/user`, {\r\n    method: \"PATCH\",\r\n    mode: \"cors\",\r\n    cache: \"no-cache\",\r\n    credentials: \"same-origin\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"Bearer \" + getCookie(\"token\"),\r\n    },\r\n    redirect: \"follow\",\r\n    referrerPolicy: \"no-referrer\",\r\n    body: JSON.stringify({ email, password, name }),\r\n  })\r\n\r\nexport const deleteUserRequest = async (token: string | null): Promise<Response> =>\r\n  await fetch(`${API_URL}auth/logout`, {\r\n    method: \"POST\",\r\n    mode: \"cors\",\r\n    cache: \"no-cache\",\r\n    credentials: \"same-origin\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    redirect: \"follow\",\r\n    referrerPolicy: \"no-referrer\",\r\n    body: JSON.stringify({ token }),\r\n  })\r\n\r\n\r\n\r\n","// constants\r\nimport { GET_ITEMS_FAILED, GET_ITEMS_REQUEST, GET_ITEMS_SUCCESS, } from \"../constants\";\r\n\r\n// actions\r\nimport { openErrModal, setError } from \"./modal\";\r\n\r\n// utils\r\nimport { AppDispatch, AppThunk, TIngredient } from \"../../utils/type\";\r\n\r\n// api\r\nimport { getIngredientsRequest } from \"../api\";\r\n\r\n\r\nexport interface IGetIngredientsAction {\r\n  readonly type: typeof GET_ITEMS_REQUEST;\r\n}\r\n\r\nexport interface IGetIngredientsFailedAction {\r\n  readonly type: typeof GET_ITEMS_FAILED;\r\n}\r\n\r\nexport interface IGetIngredientsSuccessAction {\r\n  readonly type: typeof GET_ITEMS_SUCCESS;\r\n  readonly items: ReadonlyArray<TIngredient>;\r\n}\r\n\r\n\r\nexport type TIngredientsActions =\r\n  IGetIngredientsAction |\r\n  IGetIngredientsFailedAction |\r\n  IGetIngredientsSuccessAction;\r\n\r\nexport const getIngredientsAction = (): IGetIngredientsAction => ({\r\n  type: GET_ITEMS_REQUEST\r\n});\r\n\r\nexport const getIngredientsFailedAction = (): IGetIngredientsFailedAction => ({\r\n  type: GET_ITEMS_FAILED\r\n});\r\n\r\nexport const getIngredientsSuccessAction = (items: ReadonlyArray<TIngredient>): IGetIngredientsSuccessAction => ({\r\n  type: GET_ITEMS_SUCCESS,\r\n  items\r\n});\r\n\r\nexport const getItems: AppThunk = () => {\r\n  return function (dispatch: AppDispatch) {\r\n    dispatch(getIngredientsAction());\r\n    getIngredientsRequest()\r\n      .then((res /*: Response*/) => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        } else {\r\n          dispatch(getIngredientsFailedAction());\r\n        }\r\n        return Promise.reject(res.status);\r\n      })\r\n      .then((data) => {\r\n        dispatch(getIngredientsSuccessAction(data.data));\r\n      })\r\n      .catch((err) => {\r\n        dispatch(getIngredientsFailedAction());\r\n        dispatch(openErrModal());\r\n        dispatch(setError(`getItems ${err}`));\r\n      });\r\n  };\r\n}\r\n","// actions\r\nimport { openErrModal, setError } from \"./modal\";\r\n\r\n// constants\r\nimport {\r\n  AUTHORIZE_FAILED,\r\n  AUTHORIZE_REQUEST,\r\n  AUTHORIZE_SUCCESS,\r\n  DELETE_USER_FAILED,\r\n  DELETE_USER_REQUEST,\r\n  DELETE_USER_SUCCESS,\r\n  GET_USER_FAILED,\r\n  GET_USER_REQUEST,\r\n  GET_USER_SUCCESS,\r\n  SET_USER_FAILED,\r\n  SET_USER_REQUEST,\r\n  SET_USER_SUCCESS,\r\n  UPDATE_TOKEN_FAILED,\r\n  UPDATE_TOKEN_REQUEST,\r\n  UPDATE_TOKEN_SUCCESS,\r\n  UPDATE_USER_FAILED,\r\n  UPDATE_USER_REQUEST,\r\n  UPDATE_USER_SUCCESS\r\n} from \"../constants\";\r\n\r\n// utils\r\nimport { deleteCookie, setTokens } from \"../../utils/utils\";\r\nimport { AppDispatch, AppThunk, TData, TRequestMessage, TToken, TUserData } from \"../../utils/type\";\r\n\r\n// api\r\nimport {\r\n  authorizeRequest,\r\n  deleteUserRequest,\r\n  getUserRequest,\r\n  registerRequest,\r\n  updateTokenRequest,\r\n  updateUserRequest\r\n} from \"../api\";\r\n\r\n\r\nexport interface IAuthorizeAction {\r\n  readonly type: typeof AUTHORIZE_REQUEST;\r\n}\r\n\r\nexport interface IAuthorizeFailedAction {\r\n  readonly type: typeof AUTHORIZE_FAILED;\r\n}\r\n\r\nexport interface IAuthorizeSuccessAction {\r\n  readonly type: typeof AUTHORIZE_SUCCESS;\r\n  readonly user: TData;\r\n}\r\n\r\nexport interface IDeleteUserAction {\r\n  readonly type: typeof DELETE_USER_REQUEST;\r\n}\r\n\r\nexport interface IDeleteUserFailedAction {\r\n  readonly type: typeof DELETE_USER_FAILED;\r\n}\r\n\r\nexport interface IDeleteUserSuccessAction {\r\n  readonly type: typeof DELETE_USER_SUCCESS;\r\n  readonly user: TRequestMessage;\r\n}\r\n\r\nexport interface IGetUserAction {\r\n  readonly type: typeof GET_USER_REQUEST;\r\n}\r\n\r\nexport interface IGetUserFailedAction {\r\n  readonly type: typeof GET_USER_FAILED;\r\n}\r\n\r\nexport interface IGetUserSuccessAction {\r\n  readonly type: typeof GET_USER_SUCCESS;\r\n  readonly user: TUserData;\r\n}\r\n\r\nexport interface ISetUserAction {\r\n  readonly type: typeof SET_USER_REQUEST;\r\n}\r\n\r\nexport interface ISetUserFailedAction {\r\n  readonly type: typeof SET_USER_FAILED;\r\n}\r\n\r\nexport interface ISetUserSuccessAction {\r\n  readonly type: typeof SET_USER_SUCCESS;\r\n  readonly user: TData;\r\n}\r\n\r\nexport interface IUpdateUserAction {\r\n  readonly type: typeof UPDATE_USER_REQUEST;\r\n}\r\n\r\nexport interface IUpdateUserFailedAction {\r\n  readonly type: typeof UPDATE_USER_FAILED;\r\n}\r\n\r\nexport interface IUpdateUserSuccessAction {\r\n  readonly type: typeof UPDATE_USER_SUCCESS;\r\n  readonly user: TUserData;\r\n}\r\n\r\nexport interface IUpdateTokenAction {\r\n  readonly type: typeof UPDATE_TOKEN_REQUEST;\r\n}\r\n\r\nexport interface IUpdateTokenFailedAction {\r\n  readonly type: typeof UPDATE_TOKEN_FAILED;\r\n}\r\n\r\nexport interface IUpdateTokenSuccessAction {\r\n  readonly type: typeof UPDATE_TOKEN_SUCCESS;\r\n  readonly token: TToken;\r\n}\r\n\r\nexport type TUserActions =\r\n  IAuthorizeAction |\r\n  IAuthorizeFailedAction |\r\n  IAuthorizeSuccessAction |\r\n  IDeleteUserAction |\r\n  IDeleteUserFailedAction |\r\n  IDeleteUserSuccessAction |\r\n  IGetUserAction |\r\n  IGetUserFailedAction |\r\n  IGetUserSuccessAction |\r\n  ISetUserAction |\r\n  ISetUserFailedAction |\r\n  ISetUserSuccessAction |\r\n  IUpdateUserAction |\r\n  IUpdateUserFailedAction |\r\n  IUpdateUserSuccessAction |\r\n  IUpdateTokenAction |\r\n  IUpdateTokenFailedAction |\r\n  IUpdateTokenSuccessAction;\r\n\r\nexport const authorizeAction = (): IAuthorizeAction => ({\r\n  type: AUTHORIZE_REQUEST\r\n});\r\n\r\nexport const authorizeFailedAction = (): IAuthorizeFailedAction => ({\r\n  type: AUTHORIZE_FAILED\r\n});\r\n\r\nexport const authorizeSuccessAction = (user: TData): IAuthorizeSuccessAction => ({\r\n  type: AUTHORIZE_SUCCESS,\r\n  user\r\n});\r\n\r\nexport const deleteUserAction = (): IDeleteUserAction => ({\r\n  type: DELETE_USER_REQUEST\r\n});\r\n\r\nexport const deleteUserFailedAction = (): IDeleteUserFailedAction => ({\r\n  type: DELETE_USER_FAILED\r\n});\r\n\r\nexport const deleteUserSuccessAction = (user: TRequestMessage): IDeleteUserSuccessAction => ({\r\n  type: DELETE_USER_SUCCESS,\r\n  user\r\n});\r\n\r\nexport const getUserAction = (): IGetUserAction => ({\r\n  type: GET_USER_REQUEST\r\n});\r\n\r\nexport const getUserFailedAction = (): IGetUserFailedAction => ({\r\n  type: GET_USER_FAILED\r\n});\r\n\r\nexport const getUserSuccessAction = (user: TUserData): IGetUserSuccessAction => ({\r\n  type: GET_USER_SUCCESS,\r\n  user\r\n});\r\n\r\nexport const setUserAction = (): ISetUserAction => ({\r\n  type: SET_USER_REQUEST\r\n});\r\n\r\nexport const setUserFailedAction = (): ISetUserFailedAction => ({\r\n  type: SET_USER_FAILED\r\n});\r\n\r\nexport const setUserSuccessAction = (user: TData): ISetUserSuccessAction => ({\r\n  type: SET_USER_SUCCESS,\r\n  user\r\n});\r\n\r\nexport const updateUserAction = (): IUpdateUserAction => ({\r\n  type: UPDATE_USER_REQUEST\r\n});\r\n\r\nexport const updateUserFailedAction = (): IUpdateUserFailedAction => ({\r\n  type: UPDATE_USER_FAILED\r\n});\r\n\r\nexport const updateUserSuccessAction = (user: TUserData): IUpdateUserSuccessAction => ({\r\n  type: UPDATE_USER_SUCCESS,\r\n  user\r\n});\r\n\r\nexport const updateTokenAction = (): IUpdateTokenAction => ({\r\n  type: UPDATE_TOKEN_REQUEST\r\n});\r\n\r\nexport const updateTokenFailedAction = (): IUpdateTokenFailedAction => ({\r\n  type: UPDATE_TOKEN_FAILED\r\n});\r\n\r\nexport const updateTokenSuccessAction = (token: TToken): IUpdateTokenSuccessAction => ({\r\n  type: UPDATE_TOKEN_SUCCESS,\r\n  token\r\n});\r\n\r\n\r\nexport const register: AppThunk = (email: string, password: string, name: string) => {\r\n  return function (dispatch: AppDispatch | AppThunk) {\r\n    dispatch(setUserAction());\r\n    registerRequest(email, password, name)\r\n      .then((res) => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        } else {\r\n          dispatch(setUserFailedAction());\r\n        }\r\n        return Promise.reject(res.status);\r\n      })\r\n      .then((data) => {\r\n        if (data.success) {\r\n          dispatch(setUserSuccessAction(data));\r\n          setTokens(data);\r\n          dispatch(getUser());\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        dispatch(setUserFailedAction());\r\n        dispatch(setError(`register ${err}`));\r\n        dispatch(openErrModal());\r\n      });\r\n  };\r\n}\r\n\r\nexport const updateToken: AppThunk = (callback: CallableFunction) => {\r\n  return function (dispatch: AppDispatch | AppThunk) {\r\n    dispatch(updateTokenAction());\r\n    updateTokenRequest()\r\n      .then((res) => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        } else {\r\n          dispatch(updateTokenFailedAction());\r\n        }\r\n        return Promise.reject(res.status);\r\n      })\r\n      .then((data) => {\r\n        if (data.success) {\r\n          dispatch(updateTokenSuccessAction(data));\r\n          setTokens(data);\r\n          callback && callback();\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        dispatch(updateTokenFailedAction());\r\n        dispatch(setError(`${err} token не обновлен`));\r\n      });\r\n  };\r\n}\r\n\r\nexport const getUser: AppThunk = () => {\r\n  return function (dispatch: AppDispatch | AppThunk) {\r\n    dispatch(getUserAction());\r\n    getUserRequest()\r\n      .then((res) => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        } else {\r\n          dispatch(getUserFailedAction());\r\n        }\r\n        return Promise.reject(res.status);\r\n      })\r\n      .then((data) => {\r\n        if (data.success) {\r\n          dispatch(getUserSuccessAction(data));\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        dispatch(getUserFailedAction());\r\n        if (err === 403) {\r\n          dispatch(updateToken(() => dispatch(getUser())));\r\n        }\r\n        dispatch(setError(`getUser ${err}`));\r\n      });\r\n  };\r\n}\r\n\r\n\r\n\r\nexport const authorize: AppThunk = (email: string, password: string) => {\r\n  return function (dispatch: AppDispatch | AppThunk) {\r\n    dispatch(authorizeAction());\r\n    authorizeRequest(email, password)\r\n      .then((res) => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        } else {\r\n          dispatch(authorizeFailedAction());\r\n        }\r\n        return Promise.reject(res.status);\r\n      })\r\n      .then((data) => {\r\n        if (data.success) {\r\n          dispatch(authorizeSuccessAction(data));\r\n          setTokens(data);\r\n          dispatch(getUser());\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        authorizeFailedAction();\r\n        dispatch(openErrModal());\r\n        if (err === 401) {\r\n          dispatch(setError(`${err} Неправильные почта или пароль`));\r\n        } else {\r\n          dispatch(setError(`authorize ${err}`));\r\n        }\r\n      });\r\n  };\r\n}\r\n\r\nexport const updateUser: AppThunk = (email: string, password: string, name: string) => {\r\n  return function (dispatch: AppDispatch | AppThunk) {\r\n    dispatch(updateUserAction());\r\n    updateUserRequest(email, password, name)\r\n      .then((res) => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        } else {\r\n          dispatch(updateUserFailedAction());\r\n        }\r\n        return Promise.reject(res.status);\r\n      })\r\n      .then((data) => {\r\n        if (data.success) {\r\n          dispatch(updateUserSuccessAction(data));\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        if (err === 403) {\r\n          dispatch(\r\n            updateToken(() => dispatch(updateUser(email, password, name)))\r\n          );\r\n        }\r\n        dispatch(updateUserFailedAction());\r\n        dispatch(setError(`updateUser ${err}`));\r\n      });\r\n  };\r\n}\r\n\r\nexport const deleteUser: AppThunk = (token: string | null) => {\r\n  return function (dispatch: AppDispatch) {\r\n    dispatch(deleteUserAction());\r\n    deleteUserRequest(token)\r\n      .then((res) => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        } else {\r\n          dispatch(deleteUserFailedAction());\r\n        }\r\n        return Promise.reject(res.status);\r\n      })\r\n      .then((data) => {\r\n        if (data.success) {\r\n          dispatch(deleteUserSuccessAction(data));\r\n          deleteCookie(\"token\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        dispatch(deleteUserFailedAction());\r\n        dispatch(openErrModal());\r\n        dispatch(setError(`deleteUser ${err}`));\r\n      });\r\n  };\r\n}\r\n\r\n","// actions\r\nimport { openErrModal, openOrderModal, setError } from \"./modal\";\r\nimport { updateToken } from \"./user\";\r\n\r\n// constants\r\nimport { DELETE_CURRENT_ORDER, GET_ORDER_FAILED, GET_ORDER_REQUEST, GET_ORDER_SUCCESS } from \"../constants\";\r\n\r\n// api\r\nimport { getOrderRequest } from '../api';\r\n\r\n// utils\r\nimport { AppDispatch, AppThunk, TOrder } from \"../../utils/type\";\r\n\r\n\r\nexport interface IGetOrderAction {\r\n  readonly type: typeof GET_ORDER_REQUEST;\r\n}\r\n\r\nexport interface IGetOrderFailedAction {\r\n  readonly type: typeof GET_ORDER_FAILED;\r\n}\r\n\r\nexport interface IGetOrderSuccessAction {\r\n  readonly type: typeof GET_ORDER_SUCCESS;\r\n  readonly order: TOrder;\r\n}\r\n\r\nexport interface IDeleteOrderAction {\r\n  readonly type: typeof DELETE_CURRENT_ORDER;\r\n}\r\n\r\nexport type TOrderActions =\r\n  IGetOrderAction |\r\n  IGetOrderFailedAction |\r\n  IGetOrderSuccessAction |\r\n  IDeleteOrderAction;\r\n\r\nexport const getOrderAction = (): IGetOrderAction => ({\r\n  type: GET_ORDER_REQUEST\r\n});\r\n\r\nexport const getOrderFailedAction = (): IGetOrderFailedAction => ({\r\n  type: GET_ORDER_FAILED\r\n});\r\n\r\nexport const getOrderSuccessAction = (order: TOrder): IGetOrderSuccessAction => ({\r\n  type: GET_ORDER_SUCCESS,\r\n  order\r\n});\r\n\r\nexport const deleteCurrentOrder = (): IDeleteOrderAction => ({\r\n  type: DELETE_CURRENT_ORDER,\r\n});\r\n\r\nexport const getOrder: AppThunk = (selectedId: ReadonlyArray<string>) => {\r\n  return function (dispatch: AppDispatch | AppThunk) {\r\n    dispatch(getOrderAction());\r\n    getOrderRequest(selectedId)\r\n      .then((res) => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        } else {\r\n          dispatch(getOrderFailedAction());\r\n        }\r\n        return Promise.reject(res.status);\r\n      })\r\n      .then((data) => {\r\n        dispatch(getOrderSuccessAction(data.order));\r\n        dispatch(openOrderModal());\r\n      })\r\n      .catch((err) => {\r\n        if (err === 403) {\r\n          dispatch(updateToken(() => dispatch(getOrder())));\r\n        }\r\n        dispatch(getOrderFailedAction());\r\n        dispatch(setError(`getOrder ${err}`));\r\n        dispatch(openErrModal());\r\n      });\r\n  };\r\n};\r\n","// react redux\r\nimport React from \"react\";\r\nimport { useSelector } from \"../../services/hooks\";\r\nimport { Link, NavLink, useLocation } from \"react-router-dom\";\r\n\r\n// utils\r\nimport { TIconTypes, TLocationState, TPathname } from \"../../utils/type\";\r\n\r\n// ui-components\r\nimport {\r\n  BurgerIcon,\r\n  ListIcon,\r\n  Logo,\r\n  ProfileIcon,\r\n} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\n\r\n// styles\r\nimport styles from \"./app-header.module.css\";\r\n\r\nconst AppHeader = (): JSX.Element => {\r\n  const { pathname } = useLocation<TLocationState>();\r\n  const { user, currentUserRequest } = useSelector(\r\n    (state) => state.userReducer\r\n  );\r\n\r\n  const typeForConstructor: TIconTypes =\r\n    pathname === \"/\" ? \"primary\" : \"secondary\";\r\n  const typeForUser: TIconTypes =\r\n    pathname === \"/profile\" ? \"primary\" : \"secondary\";\r\n\r\n  const pathOnProfile: TPathname = user?.user\r\n    ? { pathname: `/profile` }\r\n    : { pathname: `/login` };\r\n\r\n  return (\r\n    <header className={styles.header}>\r\n      <div className={styles.container}>\r\n        <nav className={styles.nav}>\r\n          <div className={`${styles.navLink} pl-5 pr-6`}>\r\n            <BurgerIcon type={typeForConstructor} />\r\n            <NavLink\r\n              to={{ pathname: `/` }}\r\n              className={`${styles.navLink} ml-2 text text_type_main-defaul`}\r\n              activeClassName={`${styles.activeNavLink}`}\r\n              exact\r\n            >\r\n              Конструктор\r\n            </NavLink>\r\n          </div>\r\n          <div className={`${styles.navLink} pl-6 pr-5`}>\r\n            <ListIcon type=\"secondary\" />\r\n            <NavLink\r\n              to={{ pathname: `/feed` }}\r\n              exact\r\n              className={`${styles.navLink} ml-2 text text_type_main-default`}\r\n              activeClassName={`${styles.activeNavLink}`}\r\n            >\r\n              Лента заказов\r\n            </NavLink>\r\n          </div>\r\n        </nav>\r\n        <Link to={{ pathname: `/` }} className={styles.logoContainer}>\r\n          <Logo />\r\n        </Link>\r\n        <div className={`${styles.profile}`}>\r\n          <ProfileIcon type={typeForUser} />\r\n          <NavLink\r\n            to={pathOnProfile}\r\n            className={`${styles.navLink} text text_type_main-default ml-2`}\r\n            activeClassName={`${styles.activeNavLink}`}\r\n          >\r\n            {currentUserRequest\r\n              ? null\r\n              : user?.user?.name\r\n              ? user.user.name\r\n              : \"Личный кабинет\"}\r\n          </NavLink>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default AppHeader;\r\n","// react redux types\r\nimport React, { FC, useMemo } from \"react\";\r\nimport { useSelector } from \"../../../services/hooks\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\n\r\n// dnd\r\nimport { useDrag } from \"react-dnd\";\r\n\r\n// ui-components\r\nimport {\r\n  Counter,\r\n  CurrencyIcon,\r\n} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\n\r\n// utils\r\nimport {\r\n  TBurgerIngredient,\r\n  TIngredient,\r\n  TLocationState,\r\n} from \"../../../utils/type\";\r\n\r\n// styles\r\nimport styles from \"./ingredient.module.css\";\r\n\r\nconst Ingredient: FC<TBurgerIngredient> = ({ ingredient }) => {\r\n  const location = useLocation<TLocationState>();\r\n\r\n  const { selectedBun, selectedToppings } = useSelector(\r\n    (state) => state.selectedItemsReducer\r\n  );\r\n\r\n  const count = useMemo<number>(\r\n    () =>\r\n      ingredient?.type === \"bun\"\r\n        ? selectedBun.filter((item: TIngredient) => item._id === ingredient._id)\r\n            .length * 2\r\n        : selectedToppings.filter(\r\n            (item: TIngredient) => item._id === ingredient._id\r\n          ).length,\r\n    [ingredient.type, selectedBun, selectedToppings, ingredient._id]\r\n  );\r\n\r\n  const [{ opacity }, dragRef] = useDrag({\r\n    type: \"ingredient\",\r\n    item: ingredient,\r\n    collect: (monitor) => ({\r\n      opacity: monitor.isDragging() ? 0.5 : 1,\r\n    }),\r\n  });\r\n\r\n  return (\r\n    <li className={`${styles.item} mb-7`} style={{ opacity }} ref={dragRef}>\r\n      {count !== 0 ? <Counter count={count} size=\"default\" /> : null}\r\n      <Link\r\n        className={`${styles.link}`}\r\n        key={ingredient._id}\r\n        to={{\r\n          pathname: `/ingredients/${ingredient._id}`,\r\n          state: { background: location },\r\n        }}\r\n      >\r\n        <img src={ingredient.image} alt=\"ingredient\" />\r\n        <div className={`${styles.price} mt-1 mb-2`}>\r\n          <p className=\"text text_type_digits-default mr-2\">\r\n            {ingredient.price}\r\n          </p>\r\n          <CurrencyIcon type=\"primary\" />\r\n        </div>\r\n        <p className=\"text text_type_main-default\">{ingredient.name}</p>\r\n      </Link>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Ingredient;\r\n","// react redux\r\nimport React, { RefObject, useMemo, useRef } from \"react\";\r\n\r\n// services\r\nimport { useDispatch, useSelector } from \"../../services/hooks\";\r\nimport { tabSwitch } from \"../../services/actions/tab\";\r\n\r\n// children components\r\nimport Ingredient from \"./ingredient/ingredient\";\r\n\r\n// ui-components\r\nimport { Tab } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\n\r\n// utils\r\nimport { TIngredient } from \"../../utils/type\";\r\n\r\n// styles\r\nimport styles from \"./burger-ingredients.module.css\";\r\n\r\nconst BurgerIngredients = (): JSX.Element => {\r\n  const burgerIngredientsElem: HTMLElement | null = document.querySelector(\r\n    \"#burger-ingredients\"\r\n  );\r\n  const bunsElem: HTMLElement | null = document.querySelector(\"#bun\");\r\n  const saucesElem: HTMLElement | null = document.querySelector(\"#sauce\");\r\n  const toppingElem: HTMLElement | null = document.querySelector(\"#topping\");\r\n\r\n  const dispatch = useDispatch();\r\n  const { items } = useSelector((state) => state.ingredientsReducer);\r\n  const { currentTab } = useSelector((state) => state.tabReducer);\r\n\r\n  const bunRef = useRef<HTMLHeadingElement>(null);\r\n  const saucesRef = useRef<HTMLHeadingElement>(null);\r\n  const toppingRef = useRef<HTMLHeadingElement>(null);\r\n\r\n  const setCurrentTab = (tab: string): void => {\r\n    dispatch(tabSwitch(tab));\r\n  };\r\n  const setTab = (tab: string, tabRef: RefObject<HTMLHeadingElement>): void => {\r\n    setCurrentTab(tab);\r\n    tabRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n\r\n  const onScrollPosition = (): void => {\r\n    if (bunsElem && saucesElem && toppingElem && burgerIngredientsElem) {\r\n      const bunsPosition: number = Math.abs(\r\n        bunsElem.getBoundingClientRect().top -\r\n          burgerIngredientsElem.getBoundingClientRect().top\r\n      );\r\n\r\n      const saucesPosition: number = Math.abs(\r\n        saucesElem.getBoundingClientRect().top -\r\n          burgerIngredientsElem.getBoundingClientRect().top\r\n      );\r\n\r\n      const toppingPosition: number = Math.abs(\r\n        toppingElem.getBoundingClientRect().top -\r\n          burgerIngredientsElem.getBoundingClientRect().top\r\n      );\r\n\r\n      bunsPosition < saucesPosition\r\n        ? setCurrentTab(\"bun\")\r\n        : saucesPosition < toppingPosition\r\n        ? setCurrentTab(\"sauce\")\r\n        : setCurrentTab(\"topping\");\r\n    }\r\n  };\r\n\r\n  const typeBun = useMemo<Array<TIngredient>>(() => {\r\n    return items.filter((el: TIngredient) => el.type === \"bun\");\r\n  }, [items]);\r\n\r\n  const typeSauce = useMemo<Array<TIngredient>>(() => {\r\n    return items.filter((el: TIngredient) => el.type === \"sauce\");\r\n  }, [items]);\r\n\r\n  const typeTopping = useMemo<Array<TIngredient>>(() => {\r\n    return items.filter((el: TIngredient) => el.type === \"main\");\r\n  }, [items]);\r\n\r\n  return (\r\n    <section\r\n      className={styles.burgerIngredients}\r\n      id=\"burger-ingredients\"\r\n      onScroll={(): void => onScrollPosition()}\r\n    >\r\n      <div style={{ display: \"flex\" }}>\r\n        <Tab\r\n          value=\"bun\"\r\n          active={currentTab === \"bun\"}\r\n          onClick={(): void => setTab(\"bun\", bunRef)}\r\n        >\r\n          Булки\r\n        </Tab>\r\n        <Tab\r\n          value=\"sauce\"\r\n          active={currentTab === \"sauce\"}\r\n          onClick={(): void => setTab(\"sauce\", saucesRef)}\r\n        >\r\n          Соусы\r\n        </Tab>\r\n        <Tab\r\n          value=\"topping\"\r\n          active={currentTab === \"topping\"}\r\n          onClick={(): void => setTab(\"topping\", toppingRef)}\r\n        >\r\n          Начинки\r\n        </Tab>\r\n      </div>\r\n      <div className={`${styles.container} mt-10`}>\r\n        {typeBun?.length !== 0 ? (\r\n          <>\r\n            <h2 className={`text text_type_main-medium`} id=\"bun\" ref={bunRef}>\r\n              Булки\r\n            </h2>\r\n            <ul className={`${styles.list} mt-6 mb-10 ml-4 mr-2`}>\r\n              {typeBun.map((item: TIngredient) => (\r\n                <Ingredient key={item._id} ingredient={item} />\r\n              ))}\r\n            </ul>\r\n          </>\r\n        ) : null}\r\n        {typeSauce?.length !== 0 ? (\r\n          <>\r\n            <h2\r\n              className={`text text_type_main-medium`}\r\n              id=\"sauce\"\r\n              ref={saucesRef}\r\n            >\r\n              Соусы\r\n            </h2>\r\n            <ul className={`${styles.list} mt-6 mb-10 ml-4 mr-2`}>\r\n              {typeSauce.map((item: TIngredient) => (\r\n                <Ingredient key={item._id} ingredient={item} />\r\n              ))}\r\n            </ul>\r\n          </>\r\n        ) : null}\r\n        {typeTopping?.length !== 0 ? (\r\n          <>\r\n            <h2\r\n              className={`text text_type_main-medium mb-3`}\r\n              id=\"topping\"\r\n              ref={toppingRef}\r\n            >\r\n              Начинки\r\n            </h2>\r\n            <ul className={`${styles.list} mt-6 mb-10 ml-4 mr-2`}>\r\n              {typeTopping.map((item: TIngredient) => (\r\n                <Ingredient key={item._id} ingredient={item} />\r\n              ))}\r\n            </ul>\r\n          </>\r\n        ) : null}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default BurgerIngredients;\r\n","// constants\r\nimport { TAB_SWITCH } from \"../constants\";\r\n\r\n\r\nexport interface ITabSwitchAction {\r\n  readonly type: typeof TAB_SWITCH;\r\n  readonly tab: string;\r\n}\r\n\r\nexport type TTabActions =\r\n  ITabSwitchAction;\r\n\r\nexport const tabSwitch = (tab: string): ITabSwitchAction => ({\r\n  type: TAB_SWITCH,\r\n  tab,\r\n});\r\n","// react redux\r\nimport React from \"react\";\r\n\r\n// loader\r\nimport { BallTriangle } from \"react-loader-spinner\";\r\n\r\n// styles\r\nimport styles from \"./loader.module.css\";\r\n\r\nconst Loader = (): JSX.Element => {\r\n  return (\r\n    <div className={styles.loader}>\r\n      <BallTriangle color=\"#4c4cff\" height={200} width={200} visible={true} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","// react redux\r\nimport React, { useRef, useCallback, FC } from \"react\";\r\nimport { useDispatch } from \"../../../services/hooks\";\r\n\r\n// services\r\nimport {\r\n  deleteSelectedTopping,\r\n  sortTopping,\r\n} from \"../../../services/actions/selected-items\";\r\n\r\n// ui-components\r\nimport {\r\n  ConstructorElement,\r\n  DragIcon,\r\n} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\n\r\n// dnd\r\nimport { useDrag, useDrop } from \"react-dnd\";\r\nimport type { XYCoord, Identifier } from \"dnd-core\";\r\n\r\n// utils\r\nimport { TConstructorIngredient, TDragItem } from \"../../../utils/type\";\r\n\r\n// styles\r\nimport styles from \"./ingredient.module.css\";\r\n\r\nconst Ingredient: FC<TConstructorIngredient> = ({\r\n  item,\r\n  index,\r\n  id,\r\n  type,\r\n  text,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const onDelete = (): void => {\r\n    dispatch(deleteSelectedTopping(item));\r\n  };\r\n\r\n  const moveTopping = useCallback(\r\n    (dragIndex: number, hoverIndex: number) => {\r\n      dispatch(sortTopping(dragIndex, hoverIndex));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const ref = useRef<HTMLLIElement>(null);\r\n\r\n  const [{ handlerId }, drop] = useDrop<\r\n    TDragItem,\r\n    void,\r\n    { handlerId: Identifier | null }\r\n  >({\r\n    accept: \"constructor\",\r\n    collect(monitor) {\r\n      return {\r\n        handlerId: monitor.getHandlerId(),\r\n      };\r\n    },\r\n    hover(item: TDragItem, monitor) {\r\n      if (!ref.current) {\r\n        return;\r\n      }\r\n      const dragIndex = item.index;\r\n      const hoverIndex = index;\r\n\r\n      if (dragIndex === hoverIndex) {\r\n        return;\r\n      }\r\n\r\n      const hoverBoundingRect = ref.current.getBoundingClientRect();\r\n\r\n      const hoverMiddleY =\r\n        (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\r\n\r\n      const clientOffset = monitor.getClientOffset();\r\n\r\n      const hoverClientY = (clientOffset as XYCoord).y - hoverBoundingRect.top;\r\n\r\n      if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\r\n        return;\r\n      }\r\n      if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\r\n        return;\r\n      }\r\n      moveTopping(dragIndex, hoverIndex);\r\n      item.index = hoverIndex;\r\n    },\r\n  });\r\n\r\n  const [{ isDragging }, drag] = useDrag({\r\n    type: \"constructor\",\r\n    item: () => {\r\n      return { id, index };\r\n    },\r\n    collect: (monitor) => ({\r\n      isDragging: monitor.isDragging(),\r\n    }),\r\n  });\r\n  const opacity = isDragging ? 0 : 1;\r\n  drag(drop(ref));\r\n\r\n  return (\r\n    <>\r\n      {item?.type === \"bun\" ? (\r\n        <li className={`ml-8 mb-4`}>\r\n          <ConstructorElement\r\n            type={type}\r\n            isLocked={true}\r\n            text={text}\r\n            price={item.price}\r\n            thumbnail={item.image}\r\n          />\r\n        </li>\r\n      ) : (\r\n        <li\r\n          className={`${styles.itemContainer} mb-4`}\r\n          ref={ref}\r\n          style={{ opacity }}\r\n          data-handler-id={handlerId}\r\n        >\r\n          <DragIcon type=\"primary\" />\r\n          <ConstructorElement\r\n            handleClose={onDelete}\r\n            text={item.name}\r\n            price={item.price}\r\n            thumbnail={item.image}\r\n          />\r\n        </li>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Ingredient;\r\n","// constants\r\nimport {\r\n  ADD_SELECTED_BUN,\r\n  ADD_SELECTED_TOPPING,\r\n  DELETE_SELECTED_BUNS,\r\n  DELETE_SELECTED_TOPPING,\r\n  DELETE_SELECTED_TOPPINGS,\r\n  SORT_TOPPING,\r\n} from \"../constants\";\r\n\r\n// utils\r\nimport { TIngredient } from \"../../utils/type\";\r\n\r\n\r\nexport interface IAddSelectedBunAction {\r\n  readonly type: typeof ADD_SELECTED_BUN;\r\n  readonly item: TIngredient;\r\n}\r\n\r\nexport interface IAddSelectedToppingAction {\r\n  readonly type: typeof ADD_SELECTED_TOPPING;\r\n  readonly item: TIngredient;\r\n}\r\n\r\nexport interface IDeleteSelectedBunsAction {\r\n  readonly type: typeof DELETE_SELECTED_BUNS;\r\n}\r\n\r\nexport interface IDeleteSelectedToppingsAction {\r\n  readonly type: typeof DELETE_SELECTED_TOPPINGS;\r\n}\r\n\r\nexport interface IDeleteSelectedToppingAction {\r\n  readonly type: typeof DELETE_SELECTED_TOPPING;\r\n  readonly item: TIngredient;\r\n}\r\n\r\nexport interface ISortToppingAction {\r\n  readonly type: typeof SORT_TOPPING;\r\n  readonly dragIndex: number;\r\n  readonly hoverIndex: number;\r\n}\r\n\r\nexport type TSelectedItemsActions =\r\n  IAddSelectedBunAction |\r\n  IAddSelectedToppingAction |\r\n  IDeleteSelectedBunsAction |\r\n  IDeleteSelectedToppingsAction |\r\n  IDeleteSelectedToppingAction |\r\n  ISortToppingAction;\r\n\r\n\r\nexport const addSelectedBun = (item: TIngredient): IAddSelectedBunAction => ({\r\n  type: ADD_SELECTED_BUN,\r\n  item,\r\n});\r\n\r\nexport const addSelectedTopping = (item: TIngredient): IAddSelectedToppingAction => ({\r\n  type: ADD_SELECTED_TOPPING,\r\n  item,\r\n});\r\n\r\nexport const deleteSelectedBuns = (): IDeleteSelectedBunsAction => ({\r\n  type: DELETE_SELECTED_BUNS,\r\n});\r\n\r\nexport const deleteSelectedToppings = (): IDeleteSelectedToppingsAction => ({\r\n  type: DELETE_SELECTED_TOPPINGS,\r\n});\r\n\r\nexport const deleteSelectedTopping = (item: TIngredient): IDeleteSelectedToppingAction => ({\r\n  type: DELETE_SELECTED_TOPPING,\r\n  item,\r\n});\r\n\r\nexport const sortTopping = (dragIndex: number, hoverIndex: number): ISortToppingAction => ({\r\n  type: SORT_TOPPING,\r\n  dragIndex,\r\n  hoverIndex,\r\n});\r\n","// react redux\r\nimport React, { useEffect, useMemo } from \"react\";\r\nimport { useDispatch, useSelector } from \"../../services/hooks\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n// services\r\nimport { getOrder } from \"../../services/actions/order\";\r\nimport {\r\n  addSelectedBun,\r\n  addSelectedTopping,\r\n} from \"../../services/actions/selected-items\";\r\nimport {\r\n  setButtonActive,\r\n  setButtonDisabled,\r\n} from \"../../services/actions/button\";\r\n\r\n// dnd\r\nimport { useDrop } from \"react-dnd\";\r\n\r\n// components\r\nimport Loader from \"../loader/loader\";\r\n\r\n// children component\r\nimport Ingredient from \"./ingredient/ingredient\";\r\n\r\n// ui-components\r\nimport {\r\n  BurgerIcon,\r\n  Button,\r\n  CurrencyIcon,\r\n} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\n\r\n// utils\r\nimport { TIngredient, THistoryState } from \"../../utils/type\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\n// styles\r\nimport styles from \"./burger-constructor.module.css\";\r\n\r\nconst BurgerConstructor = (): JSX.Element => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory<THistoryState>();\r\n\r\n  const { orderRequest } = useSelector((state) => state.orderReducer);\r\n  const { selectedBun, selectedToppings } = useSelector(\r\n    (state) => state.selectedItemsReducer\r\n  );\r\n  const { user } = useSelector((state) => state.userReducer);\r\n  const { isBtnDisabled } = useSelector((state) => state.buttonReducer);\r\n\r\n  const handleDrop = (item: TIngredient): void => {\r\n    item.uuid = uuidv4();\r\n    item?.type === \"bun\"\r\n      ? dispatch(addSelectedBun(item))\r\n      : dispatch(addSelectedTopping(item));\r\n  };\r\n\r\n  const [{ isHover }, dropTarget] = useDrop({\r\n    accept: \"ingredient\",\r\n    collect: (monitor) => ({\r\n      isHover: monitor.isOver(),\r\n    }),\r\n    drop(item: TIngredient) {\r\n      handleDrop(item);\r\n    },\r\n  });\r\n\r\n  const borderColor: string = isHover ? \"rgb(133, 133, 173)\" : \"transparent\";\r\n\r\n  const totalPrice = useMemo<number>(() => {\r\n    return (\r\n      selectedToppings.reduce(\r\n        (sum: number, item: TIngredient) => sum + item.price,\r\n        0\r\n      ) +\r\n      selectedBun.reduce(\r\n        (sum: number, item: TIngredient) => sum + item.price * 2,\r\n        0\r\n      )\r\n    );\r\n  }, [selectedToppings, selectedBun]);\r\n\r\n  useEffect(() => {\r\n    totalPrice === 0 || selectedBun?.length === 0\r\n      ? dispatch(setButtonDisabled())\r\n      : dispatch(setButtonActive());\r\n  }, [dispatch, totalPrice, selectedBun]);\r\n\r\n  const selectedId = useMemo<Array<string>>(() => {\r\n    return selectedBun\r\n      .concat(selectedToppings)\r\n      .map((item: TIngredient) => item._id);\r\n  }, [selectedBun, selectedToppings]);\r\n\r\n  const handleOpenOrderModal = (): void => {\r\n    if (user?.user) {\r\n      dispatch(getOrder(selectedId));\r\n    } else {\r\n      history.replace({ pathname: \"/login\" });\r\n      return;\r\n    }\r\n  };\r\n\r\n  const renderCard = (item: TIngredient, index: number): JSX.Element => {\r\n    return (\r\n      <Ingredient\r\n        item={item}\r\n        index={index}\r\n        key={item.uuid}\r\n        id={item._id}\r\n        type=\"top\"\r\n        text={item.name}\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <section\r\n      className={`${styles.burgerConstructor} ml-10 pl-4`}\r\n      style={{ borderColor }}\r\n      ref={dropTarget}\r\n    >\r\n      {!orderRequest ? (\r\n        <>\r\n          <ul className={`${styles.list}`}>\r\n            {selectedBun &&\r\n              selectedBun.map((item: TIngredient, index: number) => (\r\n                <Ingredient\r\n                  item={item}\r\n                  key={item.uuid}\r\n                  index={index}\r\n                  type={\"top\"}\r\n                  text={`${item.name} (верх)`}\r\n                  id={item._id}\r\n                />\r\n              ))}\r\n            <div className={`${styles.middleContainer} pr-2`}>\r\n              {selectedToppings &&\r\n                selectedToppings.map((item: TIngredient, index: number) =>\r\n                  renderCard(item, index)\r\n                )}\r\n            </div>\r\n            {selectedBun &&\r\n              selectedBun.map((item: TIngredient, index: number) => (\r\n                <Ingredient\r\n                  item={item}\r\n                  key={item.uuid}\r\n                  index={index}\r\n                  type={\"bottom\"}\r\n                  text={`${item.name} (низ)`}\r\n                  id={item._id}\r\n                />\r\n              ))}\r\n          </ul>\r\n          {selectedBun?.length !== 0 || selectedToppings?.length !== 0 ? (\r\n            <div className={`${styles.summary} mt-10 pr-4`}>\r\n              <div className={`${styles.price} mr-10`}>\r\n                <p className=\"text text_type_digits-medium pr-2\">\r\n                  {totalPrice}\r\n                </p>\r\n                <CurrencyIcon type=\"primary\" />\r\n              </div>\r\n              <Button\r\n                type=\"primary\"\r\n                size=\"large\"\r\n                onClick={handleOpenOrderModal}\r\n                disabled={isBtnDisabled}\r\n              >\r\n                Оформить заказ\r\n              </Button>\r\n            </div>\r\n          ) : (\r\n            <>\r\n              <div className={`${styles.burgerImg}`}>\r\n                <BurgerIcon type=\"secondary\" />\r\n              </div>\r\n              <p\r\n                className={`${styles.text} text text_type_main-medium text_color_inactive`}\r\n              >\r\n                Для выбора ингредиента перетащите его из левого меню.\r\n              </p>\r\n              <p\r\n                className={`${styles.text} text text_type_main-medium text_color_inactive mt-5`}\r\n              >\r\n                Начните с добавления булки.\r\n              </p>\r\n            </>\r\n          )}\r\n        </>\r\n      ) : (\r\n        <>\r\n          <p\r\n            className={`${styles.text_loader} text text_type_main-medium text_color_inactive`}\r\n          >\r\n            Подождите, идет оформление заказа.\r\n          </p>\r\n          <Loader />\r\n        </>\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default BurgerConstructor;\r\n","// constants\r\nimport { SET_BTN_DISABLED, SET_BTN_ACTIVE } from \"../constants\";\r\n\r\n\r\nexport interface IButtonDisabledAction {\r\n  readonly type: typeof SET_BTN_DISABLED;\r\n}\r\n\r\nexport interface IButtonActiveAction {\r\n  readonly type: typeof SET_BTN_ACTIVE;\r\n}\r\n\r\nexport type TButtonActions =\r\n  IButtonDisabledAction |\r\n  IButtonActiveAction;\r\n\r\nexport const setButtonDisabled = (): IButtonDisabledAction => ({\r\n  type: SET_BTN_DISABLED\r\n});\r\n\r\nexport const setButtonActive = (): IButtonActiveAction => ({\r\n  type: SET_BTN_ACTIVE\r\n});\r\n","// react redux\r\nimport React from \"react\";\r\n\r\n// dnd\r\nimport { DndProvider } from \"react-dnd\";\r\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\r\n\r\n// styles\r\nimport styles from \"./main.module.css\";\r\n\r\n// components\r\nimport BurgerIngredients from \"../burger-ingredients/burger-ingredients\";\r\nimport BurgerConstructor from \"../burger-constructor/burger-constructor\";\r\n\r\nconst Main = () => {\r\n  return (\r\n    <main className={`${styles.main} pl-5 pr-5`}>\r\n      <h1 className={`text text_type_main-large mt-10 mb-5`}>\r\n        Соберите бургер\r\n      </h1>\r\n\r\n      <div className={styles.container}>\r\n        <DndProvider backend={HTML5Backend}>\r\n          <BurgerIngredients />\r\n          <BurgerConstructor />\r\n        </DndProvider>\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","// react redux\r\nimport React from \"react\";\r\n\r\n//styles\r\nimport styles from \"./modal-overlay.module.css\";\r\n\r\nconst ModalOverlay = (): JSX.Element => {\r\n  return <div className={`modalOverlay ${styles.modalOverlay}`} />;\r\n};\r\n\r\nexport default ModalOverlay;\r\n","// react redux\r\nimport React, { FC, useEffect } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\n//components\r\nimport ModalOverlay from \"../modal-overlay/modal-overlay\";\r\n\r\n// ui-components\r\nimport { CloseIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\n\r\n// utils\r\nimport { TModal } from \"../../utils/type\";\r\n\r\n//styles\r\nimport styles from \"./modal.module.css\";\r\n\r\nconst modalRoot = document.getElementById(\"modals\") as HTMLElement;\r\n\r\nconst Modal: FC<TModal> = ({ handleClose, children }) => {\r\n  useEffect(() => {\r\n    const handleEscClose = (e: KeyboardEvent): void => {\r\n      if (e.key === \"Escape\") {\r\n        handleClose();\r\n      }\r\n    };\r\n\r\n    const handlerOverlayClick = ({ target }: MouseEvent) => {\r\n      const targetDivElement: HTMLDivElement = target as HTMLDivElement;\r\n      if (targetDivElement.classList.contains(\"modalOverlay\")) {\r\n        handleClose();\r\n      }\r\n    };\r\n\r\n    window.addEventListener(\"keydown\", handleEscClose);\r\n    window.addEventListener(\"mousedown\", handlerOverlayClick);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", handleEscClose);\r\n      window.removeEventListener(\"mousedown\", handlerOverlayClick);\r\n    };\r\n  }, [handleClose]);\r\n\r\n  return ReactDOM.createPortal(\r\n    <>\r\n      <ModalOverlay />\r\n      <div className={`${styles.modal} pt-10 pl-10 pr-10 pb-15`}>\r\n        <div className={styles.close}>\r\n          <CloseIcon type=\"primary\" onClick={handleClose} />\r\n        </div>\r\n        {children}\r\n      </div>\r\n    </>,\r\n    modalRoot\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","// react redux\r\nimport React, { useMemo } from \"react\";\r\nimport { useSelector } from \"../../services/hooks\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\n// utils\r\nimport { TIngredient } from \"../../utils/type\";\r\n\r\n//styles\r\nimport styles from \"./ingredient-details.module.css\";\r\n\r\nconst IngredientDetails = (): JSX.Element => {\r\n  const { items } = useSelector((state) => state.ingredientsReducer);\r\n\r\n  const ID: string = useParams<{ id: string }>().id;\r\n\r\n  const currentIngredient = useMemo<TIngredient>(\r\n    () => items.filter((item: TIngredient) => item._id === ID)[0],\r\n    [items, ID]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {currentIngredient ? (\r\n        <div className={`${styles.container} mt-3`}>\r\n          <h2 className=\"text text_type_main-large\">Детали ингредиента</h2>\r\n          <div className={`${styles.ingredient} mt-3`}>\r\n            <img\r\n              src={currentIngredient.image}\r\n              className={`${styles.image} pl-5 pr-5 mt-3 mb-4`}\r\n              alt={currentIngredient.name}\r\n            />\r\n            <h3 className={`${styles.name} text text_type_main-medium mb-8`}>\r\n              {currentIngredient.name}\r\n            </h3>\r\n            <ul className={`${styles.info}`}>\r\n              <li\r\n                className={`${styles.item} text text_type_main-default text_color_inactive pl-2 pr-2`}\r\n              >\r\n                <p className=\"text text_type_main-default text_color_inactive\">\r\n                  Калории,ккал\r\n                </p>\r\n                <p className=\"text text_type_digits-default text_color_inactive\">\r\n                  {currentIngredient.calories}\r\n                </p>\r\n              </li>\r\n              <li\r\n                className={`${styles.item} text text_type_main-default text_color_inactive pl-2 pr-2`}\r\n              >\r\n                <p className=\"text text_type_main-default text_color_inactive\">\r\n                  Белки, г\r\n                </p>\r\n                <p className=\"text text_type_digits-default text_color_inactive\">\r\n                  {currentIngredient.proteins}\r\n                </p>\r\n              </li>\r\n              <li\r\n                className={`${styles.item} text text_type_main-default text_color_inactive pl-2 pr-2`}\r\n              >\r\n                <p className=\"text text_type_main-default text_color_inactive\">\r\n                  Жиры, г\r\n                </p>\r\n                <p className=\"text text_type_digits-default text_color_inactive\">\r\n                  {currentIngredient.fat}\r\n                </p>\r\n              </li>\r\n              <li\r\n                className={`${styles.item} text text_type_main-default text_color_inactive pl-2 pr-2`}\r\n              >\r\n                <p className=\"text text_type_main-default text_color_inactive\">\r\n                  Углеводы, г\r\n                </p>\r\n                <p className=\"text text_type_digits-default text_color_inactive\">\r\n                  {currentIngredient.carbohydrates}\r\n                </p>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default IngredientDetails;\r\n","export default __webpack_public_path__ + \"static/media/vector1.212deacc.svg\";","export default __webpack_public_path__ + \"static/media/vector2.108e071d.svg\";","export default __webpack_public_path__ + \"static/media/vector3.9ffee6b1.svg\";","export default __webpack_public_path__ + \"static/media/stroke.bd47ec5e.svg\";","// react redux\r\nimport React from \"react\";\r\nimport { useSelector } from \"../../services/hooks\";\r\n\r\n// image\r\nimport vector1 from \"../../images/vector1.svg\";\r\nimport vector2 from \"../../images/vector2.svg\";\r\nimport vector3 from \"../../images/vector3.svg\";\r\nimport stroke from \"../../images/stroke.svg\";\r\n\r\n//styles\r\nimport styles from \"./order-details.module.css\";\r\n\r\nconst OrderDetails = (): JSX.Element => {\r\n  const { order } = useSelector((state) => state.orderReducer);\r\n\r\n  return (\r\n    <div className={`${styles.orderDetails} pt-20 pb-15`}>\r\n      <h2 className={`${styles.title} text text_type_digits-large mb-8`}>\r\n        {order.number}\r\n      </h2>\r\n      <p className=\"text text_type_main-medium\">идентификатор заказа</p>\r\n      <div className={`${styles.image} mt-15 mb-15`}>\r\n        <img src={vector1} className={`${styles.vector1}`} alt=\"готово\" />\r\n        <img src={vector2} className={`${styles.vector2}`} alt=\"готово\" />\r\n        <img src={vector3} className={`${styles.vector3}`} alt=\"готово\" />\r\n        <img src={stroke} className={`${styles.stroke} `} alt=\"готово\" />\r\n      </div>\r\n      <p className=\"text text_type_main-default mb-2\">\r\n        Ваш заказ начали готовить\r\n      </p>\r\n      <p className=\"text text_type_main-default text_color_inactive\">\r\n        Дождитесь готовности на орбитальной станции\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrderDetails;\r\n","// react redux\r\nimport React from \"react\";\r\nimport { useSelector } from \"../../services/hooks\";\r\n\r\n//styles\r\nimport styles from \"./err.module.css\";\r\n\r\nconst Err = (): JSX.Element => {\r\n  const { error } = useSelector((state) => state.modalReducer);\r\n\r\n  return (\r\n    <div className={`${styles.container} mt-20 mb-20`}>\r\n      <h2 className=\"text text_type_main-large text_color_inactive\">\r\n        Ошибка выполнения запроса: {error}\r\n      </h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Err;\r\n","// react redux\r\nimport React from \"react\";\r\nimport { useSelector } from \"../../services/hooks\";\r\nimport { Redirect, Route, RouteProps } from \"react-router-dom\";\r\n\r\nconst ProtectedRoute = ({ children, ...rest }: RouteProps) => {\r\n  const { user } = useSelector((state) => state.userReducer);\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={({ location }) =>\r\n        user?.user ? (\r\n          children\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/login\",\r\n              state: { from: location },\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","// react redux\r\nimport React, { FC, useMemo } from \"react\";\r\n\r\n// ui-components\r\nimport { CurrencyIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\n\r\n// utils\r\nimport { TOrderIngredient, TPageIngredient } from \"../../../utils/type\";\r\n\r\n// styles\r\nimport styles from \"./ingredient.module.css\";\r\n\r\nconst Ingredient: FC<TPageIngredient> = ({ ingredientArr, ingredient }) => {\r\n  const count = useMemo<number>(\r\n    () =>\r\n      ingredient?.type === \"bun\"\r\n        ? 2\r\n        : ingredientArr.filter(\r\n            (item: TOrderIngredient) => item.id === ingredient.id\r\n          ).length,\r\n    [ingredient, ingredientArr]\r\n  );\r\n\r\n  return (\r\n    <li className={`${styles.img_container} mb-4`}>\r\n      <div className={`${styles.ingredient} mb-4`}>\r\n        <div className={`${styles.img_box} ml-1 mt-1 mr-4`}>\r\n          <img\r\n            src={ingredient.img}\r\n            className={`${styles.img}`}\r\n            alt=\"изображение ингредиента\"\r\n          />\r\n        </div>\r\n        <h2 className=\"text text_type_main-default\">{ingredient.name}</h2>\r\n      </div>\r\n      <div className={`${styles.price}`}>\r\n        <p className={`text text_type_digits-default pr-2`}>{count} x </p>\r\n        <p className={`text text_type_digits-default pr-2`}>\r\n          {ingredient.price}\r\n        </p>\r\n        <CurrencyIcon type=\"primary\" />\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Ingredient;\r\n","// react redux\r\nimport React, { useEffect, useMemo } from \"react\";\r\nimport { useLocation, useParams } from \"react-router-dom\";\r\nimport { useSelector } from \"../../services/hooks\";\r\n\r\n// utils\r\nimport {\r\n  TFeed,\r\n  TLocationState,\r\n  TOrderFeeds,\r\n  TOrderIngredient,\r\n  TStatus,\r\n  TStatusStyle,\r\n} from \"../../utils/type\";\r\n\r\n// moment\r\nimport moment from \"moment\";\r\nimport \"moment/locale/ru\";\r\n\r\n//components\r\nimport Loader from \"../loader/loader\";\r\n\r\n// children component\r\nimport Ingredient from \"./ingredient/ingredient\";\r\n\r\n// ui-components\r\nimport { CurrencyIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\n\r\n// styles\r\nimport styles from \"./order.module.css\";\r\n\r\nconst Order = (): JSX.Element => {\r\n  const location = useLocation<TLocationState>();\r\n  const { pathname } = useLocation<TLocationState>();\r\n\r\n  const { feeds, userFeeds } = useSelector((state) => state.wsReducer);\r\n  const { items } = useSelector((state) => state.ingredientsReducer);\r\n\r\n  const item: TOrderFeeds = pathname === \"/profile/orders\" ? userFeeds : feeds;\r\n  const ID: string = useParams<{ id: string }>().id;\r\n\r\n  useEffect(() => {\r\n    location.state = undefined;\r\n  }, [location]);\r\n\r\n  const currentIngredient = useMemo<TFeed>(\r\n    () => item?.orders.filter((item: TFeed) => item._id === ID)[0],\r\n    [ID, item.orders]\r\n  );\r\n  const date = useMemo<moment.Moment>(() => {\r\n    return moment(currentIngredient?.createdAt);\r\n  }, [currentIngredient?.createdAt]);\r\n\r\n  const dateFormatted = useMemo<string>(() => {\r\n    const gmt: string = date?.format(\"Z\").slice(0, 3);\r\n    return `${date?.fromNow()}, ${date?.format(\"h:mm\")} i-GMT${gmt?.slice(\r\n      0,\r\n      1\r\n    )}${+gmt?.slice(1)}`;\r\n  }, [date]);\r\n\r\n  const arrForPrice = useMemo<Array<string>>(() => {\r\n    const buns: Array<string> = [];\r\n    const notBuns: Array<string> = [];\r\n\r\n    items.map((el) => {\r\n      for (let i = 0; i < currentIngredient?.ingredients.length; i++) {\r\n        if (el._id === currentIngredient?.ingredients[i] && el.type === \"bun\") {\r\n          buns.push(el._id);\r\n        } else if (\r\n          el._id === currentIngredient?.ingredients[i] &&\r\n          el.type !== \"bun\"\r\n        ) {\r\n          notBuns.push(el._id);\r\n        }\r\n      }\r\n      return { buns, notBuns };\r\n    });\r\n    return [...Array.from(new Set(buns)), ...notBuns];\r\n  }, [currentIngredient, items]);\r\n\r\n  const totalPrice = useMemo<number>(() => {\r\n    const price: Array<number> = [];\r\n    items.map((el) => {\r\n      for (let i = 0; i < arrForPrice.length; i++) {\r\n        if (el._id === arrForPrice[i] && el.type === \"bun\") {\r\n          price.push(el.price * 2);\r\n        } else if (el._id === arrForPrice[i]) {\r\n          price.push(el.price);\r\n        }\r\n      }\r\n      return price;\r\n    });\r\n\r\n    return price.reduce((sum: number, item: number) => sum + item, 0);\r\n  }, [items, arrForPrice]);\r\n\r\n  const ingredientArr = useMemo<Array<any>>(() => {\r\n    const ingredient: Array<any> = [];\r\n    items.map((el) => {\r\n      for (let i = 0; i < currentIngredient?.ingredients.length; i++) {\r\n        if (el._id === currentIngredient?.ingredients[i]) {\r\n          ingredient.push({\r\n            img: el.image,\r\n            name: el.name,\r\n            price: el.price,\r\n            type: el.type,\r\n            id: el._id,\r\n          });\r\n        }\r\n      }\r\n      return ingredient;\r\n    });\r\n    return ingredient;\r\n  }, [currentIngredient, items]);\r\n\r\n  const filteredArray = useMemo<Array<TOrderIngredient>>(() => {\r\n    const arr: Array<TOrderIngredient> = [];\r\n    ingredientArr.filter((item: TOrderIngredient) => {\r\n      if (!arr.some((el: TOrderIngredient) => el.id === item.id)) {\r\n        arr.push(item);\r\n      }\r\n      return arr;\r\n    });\r\n    return arr;\r\n  }, [ingredientArr]);\r\n\r\n  const status: TStatus =\r\n    currentIngredient?.status === \"created\"\r\n      ? \"Создан\"\r\n      : currentIngredient?.status === \"pending\"\r\n      ? \"Готовится\"\r\n      : currentIngredient?.status === \"done\"\r\n      ? \"Выполнен\"\r\n      : \"\";\r\n\r\n  const statusStyle: TStatusStyle =\r\n    currentIngredient?.status === \"done\"\r\n      ? { color: \"#00CCCC\" }\r\n      : { color: \"#F2F2F3\" };\r\n\r\n  return (\r\n    <>\r\n      {currentIngredient !== undefined ? (\r\n        <div className={`${styles.container}`}>\r\n          <p\r\n            className={`${styles.number} text text_type_digits-default mt-5 mb-10`}\r\n          >\r\n            #0{currentIngredient.number}\r\n          </p>\r\n          <h2 className=\"text text_type_main-medium mb-2\">\r\n            {currentIngredient.name}\r\n          </h2>\r\n          <p\r\n            className={`text text_type_main-default mb-15`}\r\n            style={statusStyle}\r\n          >\r\n            {status}\r\n          </p>\r\n          <h2 className=\"text text_type_main-medium mb-6\">Состав:</h2>\r\n\r\n          <ul className={`${styles.images}`}>\r\n            {filteredArray &&\r\n              filteredArray.map((el: TOrderIngredient, index: number) => (\r\n                <Ingredient\r\n                  ingredient={el}\r\n                  key={index}\r\n                  ingredientArr={ingredientArr}\r\n                />\r\n              ))}\r\n          </ul>\r\n          <div className={`${styles.info}`}>\r\n            <p className=\"text text_type_main-default text_color_inactive\">\r\n              {dateFormatted}\r\n            </p>\r\n            <div className={`${styles.price}`}>\r\n              <p className={`text text_type_digits-default pr-2`}>\r\n                {totalPrice}\r\n              </p>\r\n              <CurrencyIcon type=\"primary\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <Loader />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Order;\r\n","// react redux\r\nimport React, { ChangeEvent, FormEvent, useState } from \"react\";\r\nimport { Link, Redirect, useLocation } from \"react-router-dom\";\r\n\r\n// services\r\nimport { useSelector, useDispatch } from \"../../services/hooks\";\r\nimport { authorize } from \"../../services/actions/user\";\r\n\r\n// ui-components\r\nimport {\r\n  EmailInput,\r\n  PasswordInput,\r\n  Button,\r\n} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\n\r\n// utils\r\nimport { TLocationState } from \"../../utils/type\";\r\n\r\n// styles\r\nimport styles from \"./login.module.css\";\r\n\r\nconst LoginPage = (): JSX.Element => {\r\n  const dispatch = useDispatch();\r\n  const location = useLocation<TLocationState>();\r\n\r\n  const { user } = useSelector((state) => state.userReducer);\r\n\r\n  const [form, setValue] = useState({ email: \"\", password: \"\" });\r\n\r\n  const onChange = (e: ChangeEvent<HTMLInputElement>): void => {\r\n    setValue({ ...form, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = (e: FormEvent): void => {\r\n    e.preventDefault();\r\n    dispatch(authorize(form.email, form.password));\r\n  };\r\n\r\n  const isToken: string | null = localStorage.getItem(\"refreshToken\");\r\n  if (isToken && user?.user) {\r\n    return <Redirect to={location?.state?.from || \"/\"} />;\r\n  }\r\n\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <form className={`${styles.form}`} onSubmit={handleSubmit}>\r\n        <h1 className={`text text_type_main-medium mb-6`}>Вход</h1>\r\n        <EmailInput value={form.email} name=\"email\" onChange={onChange} />\r\n        <PasswordInput\r\n          value={form.password}\r\n          name=\"password\"\r\n          onChange={onChange}\r\n        />\r\n        <div className={`${styles.container}`}>\r\n          <Button type=\"primary\" size=\"medium\">\r\n            Войти\r\n          </Button>\r\n        </div>\r\n        <p className=\"text text_type_main-default text_color_inactive mb-4\">\r\n          Вы — новый пользователь?\r\n          <Link\r\n            to={{ pathname: \"/register\" }}\r\n            className={`${styles.link} ml-2`}\r\n          >\r\n            Зарегистрироваться\r\n          </Link>\r\n        </p>\r\n        <p className=\"text text_type_main-default text_color_inactive\">\r\n          Забыли пароль?\r\n          <Link\r\n            to={{ pathname: \"/forgot-password\" }}\r\n            className={`${styles.link} ml-2`}\r\n          >\r\n            Восстановить пароль\r\n          </Link>\r\n        </p>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","// react redux\r\nimport React, { useState, useCallback, ChangeEvent, FormEvent } from \"react\";\r\nimport { useSelector, useDispatch } from \"../../services/hooks\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\n\r\n// services\r\nimport { register } from \"../../services/actions/user\";\r\n\r\n// utils\r\nimport { TForm } from \"../../utils/type\";\r\n\r\n// ui-components\r\nimport {\r\n  Input,\r\n  EmailInput,\r\n  PasswordInput,\r\n  Button,\r\n} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\n\r\n// styles\r\nimport styles from \"./register.module.css\";\r\n\r\nconst RegisterPage = (): JSX.Element => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { user } = useSelector((state) => state.userReducer);\r\n\r\n  const [form, setValue] = useState<TForm>({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const onChange = (e: ChangeEvent<HTMLInputElement>): void => {\r\n    setValue({ ...form, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = useCallback(\r\n    (e: FormEvent): void => {\r\n      e.preventDefault();\r\n      dispatch(register(form.email, form.password, form.name));\r\n    },\r\n    [dispatch, form]\r\n  );\r\n\r\n  if (user?.user) {\r\n    return (\r\n      <Redirect\r\n        to={{\r\n          pathname: \"/\",\r\n        }}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <form className={`${styles.form}`} onSubmit={handleSubmit}>\r\n        <h1 className={`text text_type_main-medium mb-6`}>Регистрация</h1>\r\n        <Input\r\n          type={\"text\"}\r\n          placeholder={\"Имя\"}\r\n          value={form.name}\r\n          name=\"name\"\r\n          onChange={onChange}\r\n          error={false}\r\n          errorText={\"Ошибка\"}\r\n        />\r\n        <EmailInput value={form.email} name=\"email\" onChange={onChange} />\r\n        <PasswordInput\r\n          value={form.password}\r\n          name=\"password\"\r\n          onChange={onChange}\r\n        />\r\n        <div className={`${styles.container}`}>\r\n          <Button type=\"primary\" size=\"medium\">\r\n            Зарегистрироваться\r\n          </Button>\r\n        </div>\r\n        <p className=\"text text_type_main-default text_color_inactive mb-4\">\r\n          Уже зарегистрированы?\r\n          <Link to={{ pathname: \"/login\" }} className={`${styles.link} ml-2`}>\r\n            Войти\r\n          </Link>\r\n        </p>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterPage;\r\n","// actions\r\nimport { openErrModal, setError } from \"./modal\";\r\n\r\n// constants\r\nimport {\r\n  SET_FORGOT_PASSWORD_FAILED,\r\n  SET_FORGOT_PASSWORD_REQUEST,\r\n  SET_FORGOT_PASSWORD_SUCCESS,\r\n  SET_RESET_PASSWORD_FAILED,\r\n  SET_RESET_PASSWORD_REQUEST,\r\n  SET_RESET_PASSWORD_SUCCESS,\r\n} from \"../constants\";\r\n\r\n// api\r\nimport { forgotPasswordRequest, resetPasswordRequest } from \"../api\";\r\n\r\n// utils\r\nimport { AppDispatch, AppThunk, TRequestMessage } from \"../../utils/type\";\r\n\r\nexport interface ISetForgotPasswordAction {\r\n  readonly type: typeof SET_FORGOT_PASSWORD_REQUEST;\r\n}\r\n\r\nexport interface ISetForgotPasswordFailedAction {\r\n  readonly type: typeof SET_FORGOT_PASSWORD_FAILED;\r\n}\r\n\r\nexport interface ISetForgotPasswordSuccessAction {\r\n  readonly type: typeof SET_FORGOT_PASSWORD_SUCCESS;\r\n  readonly forgot_password: TRequestMessage;\r\n}\r\n\r\nexport interface ISetResetPasswordAction {\r\n  readonly type: typeof SET_RESET_PASSWORD_REQUEST;\r\n}\r\n\r\nexport interface ISetResetPasswordFailedAction {\r\n  readonly type: typeof SET_RESET_PASSWORD_FAILED;\r\n}\r\n\r\nexport interface ISetResetPasswordSuccessAction {\r\n  readonly type: typeof SET_RESET_PASSWORD_SUCCESS;\r\n  readonly reset_password: TRequestMessage;\r\n}\r\n\r\nexport type TPasswordActions =\r\n  ISetForgotPasswordAction |\r\n  ISetForgotPasswordFailedAction |\r\n  ISetForgotPasswordSuccessAction |\r\n  ISetResetPasswordAction |\r\n  ISetResetPasswordFailedAction |\r\n  ISetResetPasswordSuccessAction;\r\n\r\nexport const setForgotPassword = (): ISetForgotPasswordAction => ({\r\n  type: SET_FORGOT_PASSWORD_REQUEST\r\n});\r\n\r\nexport const setForgotPasswordFailed = (): ISetForgotPasswordFailedAction => ({\r\n  type: SET_FORGOT_PASSWORD_FAILED\r\n});\r\n\r\nexport const setForgotPasswordSuccess = (forgot_password: TRequestMessage): ISetForgotPasswordSuccessAction => ({\r\n  type: SET_FORGOT_PASSWORD_SUCCESS,\r\n  forgot_password\r\n});\r\n\r\nexport const setResetPassword = (): ISetResetPasswordAction => ({\r\n  type: SET_RESET_PASSWORD_REQUEST\r\n});\r\n\r\nexport const setResetPasswordFailed = (): ISetResetPasswordFailedAction => ({\r\n  type: SET_RESET_PASSWORD_FAILED\r\n});\r\n\r\nexport const setResetPasswordSuccess = (reset_password: TRequestMessage): ISetResetPasswordSuccessAction => ({\r\n  type: SET_RESET_PASSWORD_SUCCESS,\r\n  reset_password\r\n});\r\n\r\nexport const forgotPassword: AppThunk = (email: string) => {\r\n  return function (dispatch: AppDispatch) {\r\n    dispatch(setForgotPassword());\r\n    forgotPasswordRequest(email)\r\n      .then((res) => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        } else {\r\n          dispatch(setForgotPasswordFailed());\r\n        }\r\n        return Promise.reject(res.status);\r\n      })\r\n      .then((data) => {\r\n        if (data.success) {\r\n          dispatch(setForgotPasswordSuccess(data))\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        dispatch(setForgotPasswordFailed());\r\n        dispatch(setError(`forgotPassword ${err}`));\r\n        dispatch(openErrModal());\r\n      });\r\n  };\r\n}\r\n\r\nexport const resetPassword: AppThunk = (password: string, token: string) => {\r\n  return function (dispatch: AppDispatch) {\r\n    dispatch(setResetPassword());\r\n    resetPasswordRequest(password, token)\r\n      .then((res) => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        } else {\r\n          dispatch(setResetPasswordFailed());\r\n        }\r\n        return Promise.reject(res.status);\r\n      })\r\n      .then((data) => {\r\n        if (data.success) {\r\n          dispatch(setResetPasswordSuccess(data));\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        dispatch(setResetPasswordFailed());\r\n        dispatch(setError(`resetPassword ${err}`));\r\n        dispatch(openErrModal());\r\n      });\r\n  };\r\n}\r\n","// react redux\r\nimport React, { useState, useCallback, ChangeEvent, FormEvent } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\n\r\n// services\r\nimport { forgotPassword } from \"../../services/actions/password\";\r\nimport { useSelector, useDispatch } from \"../../services/hooks\";\r\n\r\n// ui-components\r\nimport {\r\n  EmailInput,\r\n  Button,\r\n} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\n\r\n// styles\r\nimport styles from \"./forgot-password.module.css\";\r\n\r\nconst ForgotPasswordPage = (): JSX.Element => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { forgot_password } = useSelector(\r\n    (state) => state.forgotPasswordReducer\r\n  );\r\n\r\n  const { user } = useSelector((state) => state.userReducer);\r\n\r\n  const [email, setEmailValue] = useState<string>(\"\");\r\n\r\n  const onChangeEmail = (e: ChangeEvent<HTMLInputElement>): void => {\r\n    setEmailValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = useCallback(\r\n    (e: FormEvent): void => {\r\n      e.preventDefault();\r\n      dispatch(forgotPassword(email));\r\n    },\r\n    [dispatch, email]\r\n  );\r\n\r\n  if (user?.user) {\r\n    return (\r\n      <Redirect\r\n        to={{\r\n          pathname: \"/\",\r\n        }}\r\n      />\r\n    );\r\n  }\r\n\r\n  if (forgot_password?.success) {\r\n    return (\r\n      <Redirect\r\n        to={{\r\n          pathname: \"/reset-password\",\r\n        }}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <form className={`${styles.form}`} onSubmit={handleSubmit}>\r\n        <h1 className={`text text_type_main-medium mb-6`}>\r\n          Восстановление пароля\r\n        </h1>\r\n        <EmailInput onChange={onChangeEmail} value={email} name=\"email\" />\r\n\r\n        <div className={`${styles.container}`}>\r\n          <Button type=\"primary\" size=\"medium\">\r\n            Восстановить\r\n          </Button>\r\n        </div>\r\n        <p className=\"text text_type_main-default text_color_inactive mb-4\">\r\n          Вспомнили пароль?\r\n          <Link to={{ pathname: \"/login\" }} className={`${styles.link} ml-2`}>\r\n            Войти\r\n          </Link>\r\n        </p>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ForgotPasswordPage;\r\n","// react redux\r\nimport React, { useState, useCallback, ChangeEvent, FormEvent } from \"react\";\r\nimport { useDispatch, useSelector } from \"../../services/hooks\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\n\r\n// services\r\nimport { resetPassword } from \"../../services/actions/password\";\r\n\r\n// utils\r\nimport { TResetPasswordForm } from \"../../utils/type\";\r\n\r\n// ui-components\r\nimport {\r\n  Input,\r\n  PasswordInput,\r\n  Button,\r\n} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\n\r\n// styles\r\nimport styles from \"./reset-password.module.css\";\r\n\r\nconst ResetPasswordPage = (): JSX.Element => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { reset_password } = useSelector((state) => state.resetPasswordReducer);\r\n  const { forgot_password } = useSelector(\r\n    (state) => state.forgotPasswordReducer\r\n  );\r\n\r\n  const { user } = useSelector((state) => state.userReducer);\r\n\r\n  const [form, setValue] = useState<TResetPasswordForm>({\r\n    code: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const onChange = (e: ChangeEvent<HTMLInputElement>): void => {\r\n    setValue({ ...form, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = useCallback(\r\n    (e: FormEvent): void => {\r\n      e.preventDefault();\r\n      dispatch(resetPassword(form.password, form.code));\r\n    },\r\n    [dispatch, form]\r\n  );\r\n\r\n  if (reset_password?.success) {\r\n    return (\r\n      <Redirect\r\n        to={{\r\n          pathname: \"/login\",\r\n        }}\r\n      />\r\n    );\r\n  }\r\n\r\n  if (user?.user || forgot_password?.success === undefined) {\r\n    return (\r\n      <Redirect\r\n        to={{\r\n          pathname: \"/\",\r\n        }}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <form className={`${styles.form}`} onSubmit={handleSubmit}>\r\n        <h1 className={`text text_type_main-medium mb-6`}>\r\n          Восстановление пароля\r\n        </h1>\r\n        <PasswordInput\r\n          value={form.password}\r\n          name=\"password\"\r\n          onChange={onChange}\r\n        />\r\n        <Input\r\n          type={\"text\"}\r\n          placeholder={\"Введите код из письма\"}\r\n          onChange={onChange}\r\n          value={form.code}\r\n          name={\"code\"}\r\n          error={false}\r\n          errorText={\"Ошибка\"}\r\n        />\r\n\r\n        <div className={`${styles.container}`}>\r\n          <Button type=\"primary\" size=\"medium\">\r\n            Сохранить\r\n          </Button>\r\n        </div>\r\n        <p className=\"text text_type_main-default text_color_inactive mb-4\">\r\n          Вспомнили пароль?\r\n          <Link to={{ pathname: \"/login\" }} className={`${styles.link} ml-2`}>\r\n            Войти\r\n          </Link>\r\n        </p>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResetPasswordPage;\r\n","// react redux\r\nimport React, {\r\n  ChangeEvent,\r\n  FocusEvent,\r\n  FormEvent,\r\n  useCallback,\r\n  useEffect,\r\n  useState,\r\n} from \"react\";\r\n\r\n// services\r\nimport { useDispatch, useSelector } from \"../../services/hooks\";\r\nimport { updateUser } from \"../../services/actions/user\";\r\n\r\n// utils\r\nimport { TForm } from \"../../utils/type\";\r\n\r\n// styles\r\nimport styles from \"./user-form.module.css\";\r\n\r\n// ui-components\r\nimport {\r\n  Button,\r\n  Input,\r\n  PasswordInput,\r\n} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport { TICons } from \"@ya.praktikum/react-developer-burger-ui-components/dist/ui/icons\";\r\n\r\nconst UserForm = (): JSX.Element => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { user } = useSelector((state) => state.userReducer);\r\n\r\n  const nameRef = React.useRef<HTMLInputElement>(null);\r\n  const emailRef = React.useRef<HTMLInputElement>(null);\r\n\r\n  const [form, setValue] = useState<TForm>({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const [showButton, setShowButton] = useState<boolean>(false);\r\n  const [iconOnName, setIconOnName] = useState<keyof TICons | undefined>(\r\n    \"EditIcon\"\r\n  );\r\n  const [iconOnEmail, setIconOnEmail] = useState<keyof TICons | undefined>(\r\n    \"EditIcon\"\r\n  );\r\n\r\n  const [focusOnName, setFocusOnName] = useState<boolean>(false);\r\n  const [focusOnEmail, setFocusOnEmail] = useState<boolean>(false);\r\n\r\n  const [nameErr, setNameErr] = useState<boolean>(false);\r\n  const [emailErr, setEmailErr] = useState<boolean>(false);\r\n\r\n  useEffect((): void => {\r\n    user?.user &&\r\n      setValue({\r\n        name: user.user.name,\r\n        email: user.user.email,\r\n        password: \"\",\r\n      });\r\n  }, [user?.user]);\r\n\r\n  const onChange = (e: ChangeEvent<HTMLInputElement>): void => {\r\n    e.target.name === \"name\" && e.target.value.length < 1\r\n      ? setNameErr(true)\r\n      : setNameErr(false);\r\n    e.target.name === \"email\" && e.target.value.length < 1\r\n      ? setEmailErr(true)\r\n      : setEmailErr(false);\r\n    setValue({ ...form, [e.target.name]: e.target.value });\r\n    setShowButton(true);\r\n  };\r\n\r\n  const handleSubmit = useCallback(\r\n    (e: FormEvent) => {\r\n      e.preventDefault();\r\n      const reg = /^([a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$)$/;\r\n      if (form.name.length < 1) {\r\n        setNameErr(true);\r\n      } else if (form.email.length < 1 || reg.test(form.email) === false) {\r\n        setEmailErr(true);\r\n      } else dispatch(updateUser(form.email, form.password, form.name));\r\n      setShowButton(false);\r\n    },\r\n    [dispatch, form]\r\n  );\r\n\r\n  const handleCancel = (): void => {\r\n    setNameErr(false);\r\n    setEmailErr(false);\r\n    user?.user &&\r\n      setValue({\r\n        name: user.user.name,\r\n        email: user.user.email,\r\n        password: \"\",\r\n      });\r\n    setShowButton(false);\r\n  };\r\n\r\n  const changeIconOnFocus = (e: FocusEvent<HTMLInputElement>): void => {\r\n    if (e.target.name === \"name\") {\r\n      setFocusOnName(true);\r\n      setIconOnName(\"CloseIcon\");\r\n    } else if (e.target.name === \"email\") {\r\n      setFocusOnEmail(true);\r\n      setIconOnEmail(\"CloseIcon\");\r\n    }\r\n  };\r\n\r\n  const changeIconOnBlur = (e: FocusEvent<HTMLInputElement>): void => {\r\n    if (e.target.name === \"name\") {\r\n      setFocusOnName(false);\r\n      setIconOnName(\"EditIcon\");\r\n    } else if (e.target.name === \"email\") {\r\n      setFocusOnEmail(false);\r\n      setIconOnEmail(\"EditIcon\");\r\n    }\r\n  };\r\n\r\n  const handleNameIconClick = () => {\r\n    setFocusOnName(true);\r\n    setNameErr(false);\r\n    setTimeout(() => {\r\n      nameRef.current?.focus();\r\n    }, 0);\r\n  };\r\n\r\n  const handleEmailIconClick = () => {\r\n    setFocusOnEmail(true);\r\n    setEmailErr(false);\r\n    setTimeout(() => {\r\n      emailRef.current?.focus();\r\n    }, 0);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className={`${styles.form}`}>\r\n      <Input\r\n        type={\"text\"}\r\n        placeholder={\"Имя\"}\r\n        value={form.name}\r\n        name=\"name\"\r\n        onChange={onChange}\r\n        icon={iconOnName}\r\n        error={nameErr}\r\n        errorText={`Ошибка. Поле \"Имя\" не может быть пустым.`}\r\n        onFocus={changeIconOnFocus}\r\n        onBlur={changeIconOnBlur}\r\n        ref={nameRef}\r\n        onIconClick={handleNameIconClick}\r\n        disabled={!focusOnName}\r\n      />\r\n      <Input\r\n        type={\"email\"}\r\n        placeholder={\"Email\"}\r\n        value={form.email}\r\n        name=\"email\"\r\n        onChange={onChange}\r\n        icon={iconOnEmail}\r\n        error={emailErr}\r\n        errorText={`Ошибка. Введите корректный адрес Email.`}\r\n        onFocus={changeIconOnFocus}\r\n        onBlur={changeIconOnBlur}\r\n        ref={emailRef}\r\n        onIconClick={handleEmailIconClick}\r\n        disabled={!focusOnEmail}\r\n      />\r\n      <PasswordInput\r\n        value={form.password}\r\n        name=\"password\"\r\n        onChange={onChange}\r\n      />\r\n      {showButton && (\r\n        <div className={styles.buttonContainer}>\r\n          <Button type=\"secondary\" size=\"medium\" onClick={handleCancel}>\r\n            Отмена\r\n          </Button>\r\n          <Button type=\"primary\" size=\"medium\">\r\n            Сохранить\r\n          </Button>\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default UserForm;\r\n","// react redux\r\nimport React, { FC, useMemo } from \"react\";\r\nimport { Link, useLocation, useRouteMatch } from \"react-router-dom\";\r\nimport { useSelector } from \"../../../services/hooks\";\r\n\r\n// utils\r\nimport {\r\n  TLocationState,\r\n  TOrderFeed,\r\n  TStatus,\r\n  TStatusStyle,\r\n} from \"../../../utils/type\";\r\n\r\n// moment\r\nimport moment from \"moment\";\r\nimport \"moment/locale/ru\";\r\n\r\n// ui-components\r\nimport { CurrencyIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\n\r\n// styles\r\nimport styles from \"./feed.module.css\";\r\n\r\nconst Feed: FC<TOrderFeed> = ({ feed }) => {\r\n  const location = useLocation<TLocationState>();\r\n  const { pathname } = useLocation<TLocationState>();\r\n  const { path } = useRouteMatch();\r\n  const { items } = useSelector((state) => state.ingredientsReducer);\r\n\r\n  const date: moment.Moment = moment(feed.createdAt);\r\n\r\n  const dateFormatted = useMemo<string>(() => {\r\n    const gmt: string = date.format(\"Z\").slice(0, 3);\r\n    return `${date.fromNow()}, ${date.format(\"h:mm\")} i-GMT${gmt.slice(\r\n      0,\r\n      1\r\n    )}${+gmt.slice(1)}`;\r\n  }, [date]);\r\n\r\n  const filteredArr = useMemo<Array<string>>(() => {\r\n    const buns: Array<string> = [];\r\n    const notBuns: Array<string> = [];\r\n\r\n    items.map((el) => {\r\n      for (let i = 0; i < feed.ingredients.length; i++) {\r\n        if (el._id === feed.ingredients[i] && el.type === \"bun\") {\r\n          buns.push(el._id);\r\n        } else if (el._id === feed.ingredients[i] && el.type !== \"bun\") {\r\n          notBuns.push(el._id);\r\n        }\r\n      }\r\n      return { buns, notBuns };\r\n    });\r\n    return [...Array.from(new Set(buns)), ...notBuns];\r\n  }, [feed.ingredients, items]);\r\n\r\n  const totalPrice = useMemo<number>(() => {\r\n    const price: Array<number> = [];\r\n    items.map((el) => {\r\n      for (let i = 0; i < filteredArr.length; i++) {\r\n        if (el._id === filteredArr[i] && el.type === \"bun\") {\r\n          price.push(el.price * 2);\r\n        } else if (el._id === filteredArr[i]) {\r\n          price.push(el.price);\r\n        }\r\n      }\r\n      return price;\r\n    });\r\n\r\n    return price.reduce((sum: number, item: number) => sum + item, 0);\r\n  }, [filteredArr, items]);\r\n\r\n  const imagesArr = useMemo<Array<string>>(() => {\r\n    const images: Array<string> = [];\r\n    items.map((el) => {\r\n      for (let i = 0; i < feed.ingredients.length; i++) {\r\n        if (el._id === feed.ingredients[i]) {\r\n          images.push(el.image);\r\n        }\r\n      }\r\n      return images;\r\n    });\r\n    return images;\r\n  }, [feed, items]);\r\n\r\n  const status: TStatus =\r\n    feed.status === \"created\"\r\n      ? \"Создан\"\r\n      : feed.status === \"pending\"\r\n      ? \"Готовится\"\r\n      : feed.status === \"done\"\r\n      ? \"Выполнен\"\r\n      : \"\";\r\n\r\n  const statusStyle: TStatusStyle =\r\n    feed.status === \"done\" ? { color: \"#00CCCC\" } : { color: \"#F2F2F3\" };\r\n\r\n  return (\r\n    <li className={`${styles.item} p-6 mb-4`}>\r\n      <Link\r\n        className={`${styles.link}`}\r\n        to={{\r\n          pathname: `${path}/${feed._id}`,\r\n          state: { background: location },\r\n        }}\r\n      >\r\n        <div className={`${styles.info}`}>\r\n          <p className=\"text text_type_digits-default\">#0{feed.number}</p>\r\n          <p className=\"text text_type_main-default text_color_inactive\">\r\n            {dateFormatted}\r\n          </p>\r\n        </div>\r\n        <h2 className=\"text text_type_main-medium mt-6\">{feed.name}</h2>\r\n        {pathname === \"/profile/orders\" ? (\r\n          <p className={`text text_type_main-default mt-2`} style={statusStyle}>\r\n            {status}\r\n          </p>\r\n        ) : null}\r\n        <div className={`${styles.container} mt-6`}>\r\n          <div className={`${styles.images}`}>\r\n            {imagesArr &&\r\n              imagesArr.map(\r\n                (el: string, index: number) =>\r\n                  index < 6 && (\r\n                    <div key={index} className={`${styles.img_box}`}>\r\n                      <img\r\n                        src={el}\r\n                        className={`${styles.img}`}\r\n                        alt=\"изображение ингредиента\"\r\n                      />\r\n                    </div>\r\n                  )\r\n              )}\r\n            {imagesArr.length > 6 && (\r\n              <p className={`${styles.counter} text text_type_main-default`}>\r\n                +{imagesArr.length - 6}\r\n              </p>\r\n            )}\r\n          </div>\r\n          <div className={`${styles.price}`}>\r\n            <p className={`text text_type_digits-default pr-2`}>{totalPrice}</p>\r\n            <CurrencyIcon type=\"primary\" />\r\n          </div>\r\n        </div>\r\n      </Link>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Feed;\r\n","// react redux\r\nimport React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"../../services/hooks\";\r\n\r\n// services\r\nimport {\r\n  WS_CONNECTION_CLOSED,\r\n  WS_CONNECTION_START,\r\n} from \"../../services/constants\";\r\nimport { updateToken } from \"../../services/actions/user\";\r\nimport { TWSState } from \"../../services/reducers/wsReducer\";\r\n\r\n// utils\r\nimport { TFeed } from \"../../utils/type\";\r\nimport { WS_USER_URL } from \"../../utils/constants\";\r\nimport { getCookie } from \"../../utils/utils\";\r\n\r\n//components\r\nimport Loader from \"../loader/loader\";\r\n\r\n// children component\r\nimport Feed from \"../order-feed/feed/feed\";\r\n\r\n//styles\r\nimport styles from \"./order-history.module.css\";\r\n\r\nconst OrderHistory = (): JSX.Element => {\r\n  const dispatch = useDispatch();\r\n  const { userFeeds }: TWSState = useSelector((state) => state.wsReducer);\r\n\r\n  useEffect(() => {\r\n    const token = getCookie(\"token\");\r\n    !token && dispatch(updateToken());\r\n\r\n    token !== undefined &&\r\n      dispatch({ type: WS_CONNECTION_START, wsUrl: WS_USER_URL, token: token });\r\n    return () => {\r\n      dispatch({ type: WS_CONNECTION_CLOSED });\r\n    };\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <section className={`${styles.main} ml-15`}>\r\n      {userFeeds?.orders ? (\r\n        <ul className={`${styles.container} mt-5`}>\r\n          {userFeeds?.orders.map((item: TFeed, index: number) => (\r\n            <Feed key={index} feed={item} />\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        <Loader />\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default OrderHistory;\r\n","// react redux\r\nimport React from \"react\";\r\nimport {\r\n  Route,\r\n  Switch,\r\n  NavLink,\r\n  useHistory,\r\n  useLocation,\r\n  useRouteMatch,\r\n} from \"react-router-dom\";\r\nimport { useDispatch } from \"../../services/hooks\";\r\n\r\n// services\r\nimport { deleteUser } from \"../../services/actions/user\";\r\nimport { THistoryState, TLocationState } from \"../../utils/type\";\r\n\r\n// utils\r\nimport { token } from \"../../utils/constants\";\r\n\r\n// components\r\nimport UserForm from \"../../components/user-form/user-form\";\r\nimport OrderHistory from \"../../components/order-history/order-history\";\r\n\r\n// styles\r\nimport styles from \"./profile.module.css\";\r\n\r\nconst ProfilePage = (): JSX.Element => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory<THistoryState>();\r\n  const { path } = useRouteMatch();\r\n  const { pathname } = useLocation<TLocationState>();\r\n\r\n  const logout = () => {\r\n    dispatch(deleteUser(token));\r\n    localStorage.removeItem(\"refreshToken\");\r\n    history.push(\"/login\");\r\n  };\r\n\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <nav>\r\n        <ul className={`${styles.list} mb-4`}>\r\n          <li className={`mb-9`}>\r\n            <NavLink\r\n              to={{ pathname: `/profile` }}\r\n              className={`${styles.item} text_type_main-medium text_color_inactive`}\r\n              activeClassName={`${styles.activeItem}`}\r\n              exact\r\n            >\r\n              Профиль\r\n            </NavLink>\r\n          </li>\r\n          <li className={`mb-9`}>\r\n            <NavLink\r\n              to={{ pathname: \"/profile/orders\" }}\r\n              className={`${styles.item} text_type_main-medium text_color_inactive`}\r\n              activeClassName={`${styles.activeItem}`}\r\n            >\r\n              История заказов\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <button\r\n              onClick={logout}\r\n              className={`${styles.exit} text_type_main-medium text_color_inactive`}\r\n            >\r\n              Выход\r\n            </button>\r\n          </li>\r\n        </ul>\r\n        {pathname === \"/profile/orders\" ? (\r\n          <p\r\n            className={`${styles.description} text text_type_main-default text_color_inactive ml-5`}\r\n          >\r\n            В этом разделе вы можете <br /> просмотреть свою историю заказов\r\n          </p>\r\n        ) : (\r\n          <p\r\n            className={`${styles.description} text text_type_main-default text_color_inactive ml-5`}\r\n          >\r\n            В этом разделе вы можете <br /> изменить свои персональные данные\r\n          </p>\r\n        )}\r\n      </nav>\r\n      <Switch>\r\n        <Route exact path={path}>\r\n          <UserForm />\r\n        </Route>\r\n        <Route path={`${path}/orders`}>\r\n          <OrderHistory />\r\n        </Route>\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfilePage;\r\n","// react redux\r\nimport React from \"react\";\r\n\r\n// styles\r\nimport styles from \"./ingredient.module.css\";\r\n\r\n// components\r\nimport IngredientDetails from \"../../components/ingredient-details/ingredient-details\";\r\n\r\nconst IngredientPage = (): JSX.Element => {\r\n  return (\r\n    <div className={styles.container}>\r\n      <IngredientDetails />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IngredientPage;\r\n","// react redux\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// styles\r\nimport styles from \"./err404.module.css\";\r\n\r\nconst NotFound404 = (): JSX.Element => {\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <div className={styles.container}>\r\n        <div className={styles.content}>\r\n          <h1 className=\"text text_type_main-large text_color_inactive pb-20\">\r\n            Упс! Ошибка 404\r\n          </h1>\r\n          <p className=\"text text_type_main-medium text_color_inactive\">\r\n            Запрошенная вами страница не существует &#128579;\r\n          </p>\r\n          <br />\r\n          <br />\r\n          <p className=\"text text_type_main-medium text_color_inactive\">\r\n            проверьте адрес или перейдите на{\" \"}\r\n            <Link\r\n              to={{ pathname: \"/\" }}\r\n              className={`${styles.link} text text_type_main-medium`}\r\n            >\r\n              домашнюю страницу\r\n            </Link>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFound404;\r\n","// react redux\r\nimport React from \"react\";\r\n\r\n// utils\r\nimport { TFeed } from \"../../utils/type\";\r\n\r\n// services\r\nimport { useSelector } from \"../../services/hooks\";\r\nimport { TWSState } from \"../../services/reducers/wsReducer\";\r\n\r\n//children component\r\nimport Feed from \"./feed/feed\";\r\n\r\n// styles\r\nimport styles from \"./order-feed.module.css\";\r\n\r\nconst OrderFeed = (): JSX.Element => {\r\n  const { feeds }: TWSState = useSelector((state) => state.wsReducer);\r\n\r\n  return (\r\n    <section className={styles.main}>\r\n      <ul className={`${styles.container} mt-5`}>\r\n        {feeds.orders.map((item: TFeed, index: number) => (\r\n          <Feed key={index} feed={item} />\r\n        ))}\r\n      </ul>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default OrderFeed;\r\n","// react redux\r\nimport React, { useMemo } from \"react\";\r\nimport { useSelector } from \"../../services/hooks\";\r\n\r\n// services\r\nimport { TWSState } from \"../../services/reducers/wsReducer\";\r\n\r\n// utils\r\nimport { TFeed } from \"../../utils/type\";\r\n\r\n// styles\r\nimport styles from \"./feed-info.module.css\";\r\n\r\nconst FeedInfo = (): JSX.Element => {\r\n  const { feeds }: TWSState = useSelector((state) => state.wsReducer);\r\n\r\n  const doneArr = useMemo<Array<number>>(() => {\r\n    return feeds?.orders\r\n      .filter((el: TFeed) => el.status === \"done\")\r\n      .map((item: TFeed) => {\r\n        return item.number;\r\n      });\r\n  }, [feeds]);\r\n\r\n  const createdArr = useMemo<Array<number>>(() => {\r\n    return feeds?.orders\r\n      .filter((el: TFeed) => el.status === \"created\")\r\n      .map((item: TFeed) => {\r\n        return item.number;\r\n      });\r\n  }, [feeds]);\r\n\r\n  return (\r\n    <section className={`${styles.main} mt-5`}>\r\n      <div className={`${styles.order_container} mb-15`}>\r\n        <div className={`${styles.done}`}>\r\n          <p className=\"text text_type_main-medium mb-5\">Готовы:</p>\r\n          <div className={`${styles.done_orders}`}>\r\n            {doneArr.map((el: number, index: number) => (\r\n              <p\r\n                className={`${styles.done_number} text text_type_digits-default mb-2 mr-5`}\r\n                key={index}\r\n              >\r\n                {el}\r\n              </p>\r\n            ))}\r\n          </div>\r\n        </div>\r\n        <div className={`${styles.created}`}>\r\n          <p className=\"text text_type_main-medium  mb-5\">В работе:</p>\r\n          <div className={`${styles.created_orders}`}>\r\n            {createdArr &&\r\n              createdArr.map((el: number, index: number) => (\r\n                <p\r\n                  className={`${styles.created_number} text text_type_digits-default mb-2 mr-5`}\r\n                  key={index}\r\n                >\r\n                  {el}\r\n                </p>\r\n              ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className={`${styles.total_container}`}>\r\n        <p className=\"text text_type_main-medium\">Выполнено за все время:</p>\r\n        <p className={`${styles.num_large} text text_type_digits-large mb-15`}>\r\n          {feeds.total}\r\n        </p>\r\n        <p className=\"text text_type_main-medium\">Выполнено за сегодня:</p>\r\n        <p className={`${styles.num_large} text text_type_digits-large`}>\r\n          {feeds.totalToday}\r\n        </p>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default FeedInfo;\r\n","// react redux\r\nimport React, { useEffect } from \"react\";\r\n\r\n// services\r\nimport { useDispatch, useSelector } from \"../../services/hooks\";\r\nimport {\r\n  WS_CONNECTION_CLOSED,\r\n  WS_CONNECTION_START,\r\n} from \"../../services/constants\";\r\nimport { TWSState } from \"../../services/reducers/wsReducer\";\r\n\r\n//components\r\nimport Loader from \"../../components/loader/loader\";\r\n\r\n// children components\r\nimport OrderFeed from \"../../components/order-feed/order-feed\";\r\nimport FeedInfo from \"../../components/feed-info/feed-info\";\r\n\r\n// utils\r\nimport { WS_URL } from \"../../utils/constants\";\r\n\r\n//styles\r\nimport styles from \"./feeds.module.css\";\r\n\r\nconst Feeds = (): JSX.Element => {\r\n  const dispatch = useDispatch();\r\n  const { feeds }: TWSState = useSelector((state) => state.wsReducer);\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: WS_CONNECTION_START, wsUrl: WS_URL });\r\n    return () => {\r\n      dispatch({ type: WS_CONNECTION_CLOSED });\r\n    };\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <>\r\n      {feeds?.orders.length !== 0 ? (\r\n        <section className={`${styles.main} pl-5 pr-5`}>\r\n          <h1 className={`text text_type_main-large mt-10`}>Лента заказов</h1>\r\n          <div className={styles.container}>\r\n            <OrderFeed />\r\n            <FeedInfo />\r\n          </div>\r\n        </section>\r\n      ) : (\r\n        <Loader />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Feeds;\r\n","// react redux\r\nimport React, { useEffect } from \"react\";\r\nimport { useRouteMatch } from \"react-router-dom\";\r\nimport { useDispatch } from \"../../services/hooks\";\r\n\r\n// services\r\nimport { updateToken } from \"../../services/actions/user\";\r\nimport {\r\n  WS_CONNECTION_CLOSED,\r\n  WS_CONNECTION_START,\r\n} from \"../../services/constants\";\r\n\r\n// components\r\nimport Order from \"../../components/order/order\";\r\n\r\n// utils\r\nimport { WS_URL, WS_USER_URL } from \"../../utils/constants\";\r\nimport { getCookie } from \"../../utils/utils\";\r\n\r\n// styles\r\nimport styles from \"./order.module.css\";\r\n\r\nconst OrderPage = (): JSX.Element => {\r\n  const dispatch = useDispatch();\r\n\r\n  const isProfile = !!useRouteMatch(\"/profile\");\r\n\r\n  useEffect(() => {\r\n    const token = getCookie(\"token\");\r\n    !token && dispatch(updateToken());\r\n    dispatch(\r\n      isProfile\r\n        ? {\r\n            type: WS_CONNECTION_START,\r\n            wsUrl: WS_USER_URL,\r\n            token: token,\r\n          }\r\n        : { type: WS_CONNECTION_START, wsUrl: WS_URL }\r\n    );\r\n    return () => {\r\n      dispatch({ type: WS_CONNECTION_CLOSED });\r\n    };\r\n  }, [dispatch, isProfile]);\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <Order />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrderPage;\r\n","// react redux\r\nimport React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"../../services/hooks\";\r\nimport { Route, Switch, useHistory, useLocation } from \"react-router-dom\";\r\n\r\n// services\r\nimport { getItems } from \"../../services/actions/ingredients\";\r\nimport { getUser } from \"../../services/actions/user\";\r\nimport { closeErrModal, closeOrderModal } from \"../../services/actions/modal\";\r\nimport { deleteCurrentOrder } from \"../../services/actions/order\";\r\nimport {\r\n  deleteSelectedBuns,\r\n  deleteSelectedToppings,\r\n} from \"../../services/actions/selected-items\";\r\n\r\n//components\r\nimport AppHeader from \"../app-header/app-header\";\r\nimport Main from \"../main/main\";\r\nimport Modal from \"../modal/modal\";\r\nimport IngredientDetails from \"../ingredient-details/ingredient-details\";\r\nimport OrderDetails from \"../order-details/order-details\";\r\nimport Err from \"../err/err\";\r\nimport ProtectedRoute from \"../protected-route/protected-route\";\r\nimport Order from \"../order/order\";\r\nimport Loader from \"../loader/loader\";\r\n\r\n// pages\r\nimport LoginPage from \"../../pages/login/login\";\r\nimport RegisterPage from \"../../pages/register/register\";\r\nimport ForgotPasswordPage from \"../../pages/forgot-password/forgot-password\";\r\nimport ResetPasswordPage from \"../../pages/reset-password/reset-password\";\r\nimport ProfilePage from \"../../pages/profile/profile\";\r\nimport IngredientPage from \"../../pages/ingredient/ingredient\";\r\nimport NotFound404 from \"../../pages/err404/err404\";\r\nimport Feeds from \"../../pages/feeds/feeds\";\r\nimport OrderPage from \"../../pages/order/order\";\r\n\r\n// utils\r\nimport { THistoryState, TLocationState } from \"../../utils/type\";\r\n\r\n// styles\r\nimport styles from \"./app.module.css\";\r\n\r\nconst App = (): JSX.Element => {\r\n  const dispatch = useDispatch();\r\n  const location = useLocation<TLocationState>();\r\n  const history = useHistory<THistoryState>();\r\n\r\n  const { items } = useSelector((state) => state.ingredientsReducer);\r\n  const { user } = useSelector((state) => state.userReducer);\r\n  const { isOrderModalVisible, isErrModalVisible } = useSelector(\r\n    (state) => state.modalReducer\r\n  );\r\n\r\n  const background = location.state && location.state.background;\r\n\r\n  useEffect(() => {\r\n    dispatch(getItems());\r\n    dispatch(getUser());\r\n  }, [dispatch]);\r\n\r\n  const handleCloseIngredientModal = (): void => {\r\n    history.goBack();\r\n  };\r\n\r\n  const handleCloseFeedModal = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  const handleCloseOrderModal = (): void => {\r\n    dispatch(closeOrderModal());\r\n    dispatch(deleteCurrentOrder());\r\n    dispatch(deleteSelectedBuns());\r\n    dispatch(deleteSelectedToppings());\r\n  };\r\n\r\n  const handleCloseErrModal = (): void => {\r\n    dispatch(closeErrModal());\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {items.length !== 0 ? (\r\n        <div className={styles.app}>\r\n          <AppHeader />\r\n          <Switch location={background || location}>\r\n            <Route path=\"/\" exact children={<Main />} />\r\n            <Route path=\"/feed\" exact children={<Feeds />} />\r\n            <Route path=\"/login\" children={<LoginPage />} />\r\n            <Route path=\"/register\" children={<RegisterPage />} />\r\n            <Route path=\"/forgot-password\" children={<ForgotPasswordPage />} />\r\n            <Route path=\"/reset-password\" children={<ResetPasswordPage />} />\r\n            <Route path=\"/ingredients/:id\" children={<IngredientPage />} />\r\n            <Route path=\"/feed/:id\" children={<OrderPage />} />\r\n            {user?.user === undefined ? (\r\n              <Loader />\r\n            ) : (\r\n              <ProtectedRoute\r\n                path=\"/profile/orders/:id\"\r\n                children={<OrderPage />}\r\n              />\r\n            )}\r\n            {user?.user === undefined ? (\r\n              <Loader />\r\n            ) : (\r\n              <ProtectedRoute path=\"/profile\">\r\n                <ProfilePage />\r\n              </ProtectedRoute>\r\n            )}\r\n            <Route children={<NotFound404 />} />\r\n          </Switch>\r\n          {background && (\r\n            <Route\r\n              path=\"/feed/:id\"\r\n              render={(routeProps) => {\r\n                return (\r\n                  <Modal handleClose={handleCloseFeedModal} {...routeProps}>\r\n                    <Order />\r\n                  </Modal>\r\n                );\r\n              }}\r\n            />\r\n          )}\r\n          {background && (\r\n            <Route\r\n              path=\"/profile/orders/:id\"\r\n              render={(routeProps) => {\r\n                return (\r\n                  <Modal handleClose={handleCloseFeedModal} {...routeProps}>\r\n                    <Order />\r\n                  </Modal>\r\n                );\r\n              }}\r\n            />\r\n          )}\r\n          {background && (\r\n            <Route\r\n              path=\"/ingredients/:id\"\r\n              children={\r\n                <Modal handleClose={handleCloseIngredientModal}>\r\n                  <IngredientDetails />\r\n                </Modal>\r\n              }\r\n            />\r\n          )}\r\n          {isOrderModalVisible && (\r\n            <Modal handleClose={handleCloseOrderModal}>\r\n              <OrderDetails />\r\n            </Modal>\r\n          )}\r\n          {isErrModalVisible && (\r\n            <Modal handleClose={handleCloseErrModal}>\r\n              <Err />\r\n            </Modal>\r\n          )}\r\n        </div>\r\n      ) : (\r\n        <Loader />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// react redux types\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport { store } from \"./services/store\";\r\n\r\n// styles\r\nimport \"./index.css\";\r\n\r\n// children components\r\nimport App from \"./components/app/app\";\r\n\r\n// utils\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <BrowserRouter basename=\"/REACT-BURGER\">\r\n        <App />\r\n      </BrowserRouter>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"burgerConstructor\":\"burger-constructor_burgerConstructor__1lPyN\",\"text\":\"burger-constructor_text__3CIux\",\"burgerImg\":\"burger-constructor_burgerImg__1rFGW\",\"list\":\"burger-constructor_list__2JohF\",\"middleContainer\":\"burger-constructor_middleContainer__2zFY8\",\"summary\":\"burger-constructor_summary__KJCVi\",\"price\":\"burger-constructor_price__1gqni\",\"text_loader\":\"burger-constructor_text_loader__3dOvN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ingredient-details_container__1rRjF\",\"ingredient\":\"ingredient-details_ingredient__2fwBi\",\"image\":\"ingredient-details_image__3S2tG\",\"name\":\"ingredient-details_name__2uAj3\",\"info\":\"ingredient-details_info__227R4\",\"item\":\"ingredient-details_item__12Gl3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"feed_link__1DcMg\",\"item\":\"feed_item__1Y2TM\",\"info\":\"feed_info__2kcro\",\"container\":\"feed_container__1v9_4\",\"price\":\"feed_price__3iJeS\",\"images\":\"feed_images__qwb1Y\",\"img_box\":\"feed_img_box__3scTh\",\"img\":\"feed_img__1uwyX\",\"counter\":\"feed_counter__2lOHn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"profile_wrapper__iA0sE\",\"list\":\"profile_list__YhgTr\",\"item\":\"profile_item__1sbFV\",\"exit\":\"profile_exit__3bA6E\",\"activeItem\":\"profile_activeItem__dnhvu\",\"description\":\"profile_description__3aV5d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"orderDetails\":\"order-details_orderDetails__3Pwkv\",\"title\":\"order-details_title__20kNq\",\"image\":\"order-details_image__1Cylb\",\"stroke\":\"order-details_stroke__1rUKD\",\"vector1\":\"order-details_vector1__2AB7q\",\"rotation\":\"order-details_rotation__3pHAK\",\"vector2\":\"order-details_vector2__100Uf\",\"vector3\":\"order-details_vector3__3Ilup\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"burgerIngredients\":\"burger-ingredients_burgerIngredients__1WB_z\",\"container\":\"burger-ingredients_container__2ye6O\",\"list\":\"burger-ingredients_list__KSvaX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingredient\":\"ingredient_ingredient__2Be_M\",\"img\":\"ingredient_img__26pxv\",\"img_container\":\"ingredient_img_container__3o-6y\",\"img_box\":\"ingredient_img_box__3Rahu\",\"price\":\"ingredient_price__3NrCy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"order_container__2nyrM\",\"number\":\"order_number__TCcKb\",\"images\":\"order_images__MXMDb\",\"info\":\"order_info__DQnQy\",\"column_container\":\"order_column_container__3Xm55\",\"price\":\"order_price__xFfmC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"login_wrapper__8q2Ht\",\"form\":\"login_form__2xae5\",\"container\":\"login_container__3rG5v\",\"link\":\"login_link__3AIyt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"register_wrapper__2-A_t\",\"form\":\"register_form__2YCuj\",\"container\":\"register_container__2a4OK\",\"link\":\"register_link__fNuhD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"forgot-password_wrapper__3xdV4\",\"form\":\"forgot-password_form__3VtqI\",\"container\":\"forgot-password_container__2rpMi\",\"link\":\"forgot-password_link__2fMrh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"reset-password_wrapper__307D8\",\"form\":\"reset-password_form__2KOMb\",\"container\":\"reset-password_container__1JFec\",\"link\":\"reset-password_link__RxRAP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"err404_wrapper__3CYC9\",\"container\":\"err404_container__3qL_l\",\"content\":\"err404_content__22lef\",\"link\":\"err404_link__ICQnu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"ingredient_link__37zW_\",\"item\":\"ingredient_item__MWlnl\",\"price\":\"ingredient_price__12lL-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"main_main__1VeOx\",\"container\":\"main_container__2zaAZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"modal_modal__QjxD8\",\"close\":\"modal_close__2HRwr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"user-form_form__34ymu\",\"buttonContainer\":\"user-form_buttonContainer__2qLd6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"order-history_main__SuiVC\",\"container\":\"order-history_container__D8x3S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"order-feed_main__fGaRA\",\"container\":\"order-feed_container__208JQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"feeds_main__3FN-x\",\"container\":\"feeds_container__2Ea-3\"};"],"sourceRoot":""}